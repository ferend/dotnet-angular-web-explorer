{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15)(7, \"div\", 16)(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\nfunction MatFormField_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n  }\n}\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n  }\n}\nfunction MatFormField_label_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_label_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r13.updateOutlineGap());\n    });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n  }\n}\nfunction MatFormField_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n  }\n}\nfunction MatFormField_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n  }\n}\nfunction MatFormField_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n  }\n}\nfunction MatFormField_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n  }\n}\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n  constructor() {\n    this.id = `mat-error-${nextUniqueId++}`;\n  }\n}\nMatError.ɵfac = function MatError_Factory(t) {\n  return new (t || MatError)();\n};\nMatError.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatError,\n  selectors: [[\"mat-error\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"],\n  hostVars: 1,\n  hostBindings: function MatError_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  }\n});\nMatError.propDecorators = {\n  id: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error',\n      host: {\n        'class': 'mat-error',\n        'role': 'alert',\n        '[attr.id]': 'id'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n  /**\n   * Animation that transitions the form field's error and hint messages.\n   */\n  transitionMessages: trigger('transitionMessages', [\n  // TODO(mmalerba): Use angular animations for label animation as well.\n  state('enter', style({\n    opacity: 1,\n    transform: 'translateY(0%)'\n  })), transition('void => enter', [style({\n    opacity: 0,\n    transform: 'translateY(-100%)'\n  }), animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n  constructor() {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     */\n    this.align = 'start';\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     */\n    this.id = `mat-hint-${nextUniqueId$1++}`;\n  }\n}\nMatHint.ɵfac = function MatHint_Factory(t) {\n  return new (t || MatHint)();\n};\nMatHint.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatHint,\n  selectors: [[\"mat-hint\"]],\n  hostAttrs: [1, \"mat-hint\"],\n  hostVars: 4,\n  hostBindings: function MatHint_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n      ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\",\n    id: \"id\"\n  }\n});\nMatHint.propDecorators = {\n  align: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-hint',\n        '[class.mat-right]': 'align == \"end\"',\n        '[attr.id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {}\nMatLabel.ɵfac = function MatLabel_Factory(t) {\n  return new (t || MatLabel)();\n};\nMatLabel.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatLabel,\n  selectors: [[\"mat-label\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) {\n  return new (t || MatPlaceholder)();\n};\nMatPlaceholder.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatPlaceholder,\n  selectors: [[\"mat-placeholder\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-placeholder'\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) {\n  return new (t || MatPrefix)();\n};\nMatPrefix.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatPrefix,\n  selectors: [[\"\", \"matPrefix\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix]'\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) {\n  return new (t || MatSuffix)();\n};\nMatSuffix.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatSuffix,\n  selectors: [[\"\", \"matSuffix\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix]'\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _changeDetectorRef\n   * @param {?} labelOptions\n   * @param {?} _dir\n   * @param {?} _defaults\n   * @param {?} _platform\n   * @param {?} _ngZone\n   * @param {?} _animationMode\n   */\n  constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n    super(_elementRef);\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._defaults = _defaults;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     */\n    this._outlineGapCalculationNeededImmediately = false;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     */\n    this._outlineGapCalculationNeededOnStable = false;\n    this._destroyed = new Subject();\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     */\n    this._showAlwaysAnimate = false;\n    /**\n     * State of the mat-hint and mat-error animations.\n     */\n    this._subscriptAnimationState = '';\n    this._hintLabel = '';\n    // Unique id for the hint label.\n    this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n    // Unique id for the internal form field label.\n    this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n    /* Holds the previous direction emitted by directionality service change emitter.\n         This is used in updateOutlineGap() method to update the width and position of the gap in the\n         outline. Only relevant for the outline appearance. The direction is getting updated in the\n         UI after directionality service change emission. So the outlines gaps are getting\n         updated in updateOutlineGap() method before connectionContainer child direction change\n         in UI. We may get wrong calculations. So we are storing the previous direction to get the\n         correct outline calculations*/\n    this._previousDirection = 'ltr';\n    this._labelOptions = labelOptions ? labelOptions : {};\n    this.floatLabel = this._labelOptions.float || 'auto';\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n    this._hideRequiredMarker = _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n  }\n  /**\n   * The form-field appearance style.\n   * @return {?}\n   */\n  get appearance() {\n    return this._appearance;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set appearance(value) {\n    /** @type {?} */\n    const oldValue = this._appearance;\n    this._appearance = value || this._defaults && this._defaults.appearance || 'legacy';\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  /**\n   * Whether the required marker should be hidden.\n   * @return {?}\n   */\n  get hideRequiredMarker() {\n    return this._hideRequiredMarker;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hideRequiredMarker(value) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the floating label should always float or not.\n   * @return {?}\n   */\n  get _shouldAlwaysFloat() {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n  /**\n   * Whether the label can float or not.\n   * @return {?}\n   */\n  get _canLabelFloat() {\n    return this.floatLabel !== 'never';\n  }\n  /**\n   * Text for the form field hint.\n   * @return {?}\n   */\n  get hintLabel() {\n    return this._hintLabel;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hintLabel(value) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   * @return {?}\n   */\n  get floatLabel() {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set floatLabel(value) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._labelOptions.float || 'auto';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  get _control() {\n    // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n    // and ViewEngine. We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  /**\n   * @return {?}\n   */\n  get _labelChild() {\n    return this._labelChildNonStatic || this._labelChildStatic;\n  }\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   * @return {?}\n   */\n  getConnectedOverlayOrigin() {\n    return this._connectionContainerRef || this._elementRef;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._validateControlChild();\n    /** @type {?} */\n    const control = this._control;\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith( /** @type {?} */null)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => this._changeDetectorRef.markForCheck());\n    }\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.updateOutlineGap();\n        this._previousDirection = this._dir.value;\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Determines whether a class from the NgControl should be forwarded to the host element.\n   * @param {?} prop\n   * @return {?}\n   */\n  _shouldForward(prop) {\n    /** @type {?} */\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n  /**\n   * @return {?}\n   */\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n  /**\n   * @return {?}\n   */\n  _hasLabel() {\n    return !!this._labelChild;\n  }\n  /**\n   * @return {?}\n   */\n  _shouldLabelFloat() {\n    return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n  }\n  /**\n   * @return {?}\n   */\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();\n  }\n  /**\n   * @return {?}\n   */\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n  /**\n   * Determines whether to display hints or errors.\n   * @return {?}\n   */\n  _getDisplayedMessages() {\n    return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n  /**\n   * Animates the placeholder up and locks it in position.\n   * @return {?}\n   */\n  _animateAndLockLabel() {\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled) {\n        this._showAlwaysAnimate = true;\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(\n        /**\n        * @return {?}\n        */\n        () => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   * @private\n   * @return {?}\n   */\n  _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n  /**\n   * Does any extra processing that is required when handling the hints.\n   * @private\n   * @return {?}\n   */\n  _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   * @private\n   * @return {?}\n   */\n  _validateHints() {\n    if (this._hintChildren) {\n      /** @type {?} */\n      let startHint;\n      /** @type {?} */\n      let endHint;\n      this._hintChildren.forEach(\n      /**\n      * @param {?} hint\n      * @return {?}\n      */\n      hint => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   * @private\n   * @return {?}\n   */\n  _syncDescribedByIds() {\n    if (this._control) {\n      /** @type {?} */\n      let ids = [];\n      if (this._getDisplayedMessages() === 'hint') {\n        /** @type {?} */\n        const startHint = this._hintChildren ? this._hintChildren.find(\n        /**\n        * @param {?} hint\n        * @return {?}\n        */\n        hint => hint.align === 'start') : null;\n        /** @type {?} */\n        const endHint = this._hintChildren ? this._hintChildren.find(\n        /**\n        * @param {?} hint\n        * @return {?}\n        */\n        hint => hint.align === 'end') : null;\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids = this._errorChildren.map(\n        /**\n        * @param {?} error\n        * @return {?}\n        */\n        error => error.id);\n      }\n      this._control.setDescribedByIds(ids);\n    }\n  }\n  /**\n   * Throws an error if the form field's control is missing.\n   * @protected\n   * @return {?}\n   */\n  _validateControlChild() {\n    if (!this._control) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   * @return {?}\n   */\n  updateOutlineGap() {\n    /** @type {?} */\n    const labelEl = this._label ? this._label.nativeElement : null;\n    if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n      return;\n    }\n    if (!this._platform.isBrowser) {\n      // getBoundingClientRect isn't available on the server.\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (! /** @type {?} */document.documentElement.contains(this._elementRef.nativeElement)) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n    /** @type {?} */\n    let startWidth = 0;\n    /** @type {?} */\n    let gapWidth = 0;\n    /** @type {?} */\n    const container = this._connectionContainerRef.nativeElement;\n    /** @type {?} */\n    const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n    /** @type {?} */\n    const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n    if (this._label && this._label.nativeElement.children.length) {\n      /** @type {?} */\n      const containerRect = container.getBoundingClientRect();\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be reclaculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n      /** @type {?} */\n      const containerStart = this._getStartEnd(containerRect);\n      /** @type {?} */\n      const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n      /** @type {?} */\n      let labelWidth = 0;\n      for (const child of labelEl.children) {\n        labelWidth += child.offsetWidth;\n      }\n      startWidth = labelStart - containerStart - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n    for (let i = 0; i < startEls.length; i++) {\n      startEls.item(i).style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls.item(i).style.width = `${gapWidth}px`;\n    }\n    this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = false;\n  }\n  /**\n   * Gets the start end of the rect considering the current directionality.\n   * @private\n   * @param {?} rect\n   * @return {?}\n   */\n  _getStartEnd(rect) {\n    return this._previousDirection === 'rtl' ? rect.right : rect.left;\n  }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) {\n  return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatFormField.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatFormField,\n  selectors: [[\"mat-form-field\"]],\n  contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, 4);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    }\n  },\n  viewQuery: function MatFormField_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n      ɵngcc0.ɵɵviewQuery(_c1, 7);\n      ɵngcc0.ɵɵviewQuery(_c2, 5);\n      ɵngcc0.ɵɵviewQuery(_c3, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-form-field\"],\n  hostVars: 44,\n  hostBindings: function MatFormField_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    floatLabel: \"floatLabel\",\n    appearance: \"appearance\",\n    hideRequiredMarker: \"hideRequiredMarker\",\n    hintLabel: \"hintLabel\"\n  },\n  exportAs: [\"matFormField\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c5,\n  decls: 15,\n  vars: 8,\n  consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]],\n  template: function MatFormField_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) {\n        return ctx._control.onContainerClick && ctx._control.onContainerClick($event);\n      });\n      ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n      ɵngcc0.ɵɵprojection(7);\n      ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n      ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n      ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n      ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n      ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n      ɵngcc0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    }\n  },\n  dependencies: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent],\n  styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matFormFieldAnimations.transitionMessages]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatFormField.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_LABEL_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n  }]\n}, {\n  type: Platform\n}, {\n  type: NgZone\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatFormField.propDecorators = {\n  appearance: [{\n    type: Input\n  }],\n  hideRequiredMarker: [{\n    type: Input\n  }],\n  hintLabel: [{\n    type: Input\n  }],\n  floatLabel: [{\n    type: Input\n  }],\n  underlineRef: [{\n    type: ViewChild,\n    args: ['underline', {\n      static: false\n    }]\n  }],\n  _connectionContainerRef: [{\n    type: ViewChild,\n    args: ['connectionContainer', {\n      static: true\n    }]\n  }],\n  _inputContainerRef: [{\n    type: ViewChild,\n    args: ['inputContainer', {\n      static: false\n    }]\n  }],\n  _label: [{\n    type: ViewChild,\n    args: ['label', {\n      static: false\n    }]\n  }],\n  _controlNonStatic: [{\n    type: ContentChild,\n    args: [MatFormFieldControl, {\n      static: false\n    }]\n  }],\n  _controlStatic: [{\n    type: ContentChild,\n    args: [MatFormFieldControl, {\n      static: true\n    }]\n  }],\n  _labelChildNonStatic: [{\n    type: ContentChild,\n    args: [MatLabel, {\n      static: false\n    }]\n  }],\n  _labelChildStatic: [{\n    type: ContentChild,\n    args: [MatLabel, {\n      static: true\n    }]\n  }],\n  _placeholderChild: [{\n    type: ContentChild,\n    args: [MatPlaceholder, {\n      static: false\n    }]\n  }],\n  _errorChildren: [{\n    type: ContentChildren,\n    args: [MatError]\n  }],\n  _hintChildren: [{\n    type: ContentChildren,\n    args: [MatHint]\n  }],\n  _prefixChildren: [{\n    type: ContentChildren,\n    args: [MatPrefix]\n  }],\n  _suffixChildren: [{\n    type: ContentChildren,\n    args: [MatSuffix]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n      animations: [matFormFieldAnimations.transitionMessages],\n      host: {\n        'class': 'mat-form-field',\n        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-can-float]': '_canLabelFloat',\n        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-focused]': '_control.focused',\n        '[class.mat-accent]': 'color == \"accent\"',\n        '[class.mat-warn]': 'color == \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '[class._mat-animation-noopable]': '!_animationsEnabled'\n      },\n      inputs: ['color'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_LABEL_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n      }]\n    }, {\n      type: ɵngcc2.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }],\n    underlineRef: [{\n      type: ViewChild,\n      args: ['underline', {\n        static: false\n      }]\n    }],\n    _connectionContainerRef: [{\n      type: ViewChild,\n      args: ['connectionContainer', {\n        static: true\n      }]\n    }],\n    _inputContainerRef: [{\n      type: ViewChild,\n      args: ['inputContainer', {\n        static: false\n      }]\n    }],\n    _label: [{\n      type: ViewChild,\n      args: ['label', {\n        static: false\n      }]\n    }],\n    _controlNonStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl, {\n        static: false\n      }]\n    }],\n    _controlStatic: [{\n      type: ContentChild,\n      args: [MatFormFieldControl, {\n        static: true\n      }]\n    }],\n    _labelChildNonStatic: [{\n      type: ContentChild,\n      args: [MatLabel, {\n        static: false\n      }]\n    }],\n    _labelChildStatic: [{\n      type: ContentChild,\n      args: [MatLabel, {\n        static: true\n      }]\n    }],\n    _placeholderChild: [{\n      type: ContentChild,\n      args: [MatPlaceholder, {\n        static: false\n      }]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MatError]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [MatHint]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MatPrefix]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MatSuffix]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) {\n  return new (t || MatFormFieldModule)();\n};\nMatFormFieldModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatFormFieldModule\n});\nMatFormFieldModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, ObserversModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n      imports: [CommonModule, ObserversModule],\n      exports: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, {\n    declarations: function () {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    },\n    imports: function () {\n      return [CommonModule, ObserversModule];\n    },\n    exports: function () {\n      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };","map":{"version":3,"names":["Directive","Input","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","ContentChildren","ElementRef","Inject","InjectionToken","NgZone","Optional","ViewChild","ViewEncapsulation","NgModule","animate","state","style","transition","trigger","Directionality","coerceBooleanProperty","MAT_LABEL_GLOBAL_OPTIONS","mixinColor","fromEvent","merge","Subject","startWith","take","takeUntil","Platform","ANIMATION_MODULE_TYPE","CommonModule","ObserversModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","_c0","_c1","_c2","_c3","MatFormField_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","MatFormField_div_4_Template","ɵɵprojection","MatFormField_label_9_ng_container_2_Template","ɵɵtext","ctx_r10","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_control","placeholder","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","ɵɵgetCurrentView","ɵɵlistener","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ɵɵrestoreView","ctx_r13","ɵɵresetView","updateOutlineGap","ɵɵtemplate","ctx_r4","ɵɵclassProp","empty","_shouldAlwaysFloat","color","ɵɵproperty","appearance","_labelId","_hasLabel","ɵɵattribute","id","hideRequiredMarker","required","disabled","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","nextUniqueId","MatError","constructor","ɵfac","MatError_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatError_HostBindings","inputs","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","host","matFormFieldAnimations","transitionMessages","opacity","transform","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_elementRef","_MatFormFieldMixinBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","_changeDetectorRef","labelOptions","_dir","_defaults","_platform","_ngZone","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_destroyed","_showAlwaysAnimate","_hintLabel","_previousDirection","_labelOptions","floatLabel","float","_animationsEnabled","_hideRequiredMarker","_appearance","value","oldValue","_canLabelFloat","_processHints","_floatLabel","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChild","_labelChildNonStatic","_labelChildStatic","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","control","controlType","nativeElement","classList","add","stateChanges","pipe","subscribe","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","runOutsideAngular","onStable","asObservable","_prefixChildren","changes","_suffixChildren","_hintChildren","_errorChildren","change","ngAfterContentChecked","ngAfterViewInit","detectChanges","ngOnDestroy","next","complete","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_hasFloatingLabel","_getDisplayedMessages","length","errorState","_animateAndLockLabel","_label","_validateHints","startHint","endHint","forEach","hint","ids","find","push","map","error","setDescribedByIds","labelEl","children","textContent","trim","isBrowser","document","documentElement","contains","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerRect","getBoundingClientRect","width","height","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","i","item","rect","right","left","MatFormField_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","contentQueries","MatFormField_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatFormField_Query","ɵɵviewQuery","underlineRef","_inputContainerRef","MatFormField_HostBindings","autofilled","focused","exportAs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","MatFormField_Template","ɵɵprojectionDef","MatFormField_Template_div_click_1_listener","$event","onContainerClick","dependencies","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","styles","encapsulation","data","animation","changeDetection","ctorParameters","undefined","decorators","String","static","animations","None","OnPush","MatFormFieldModule","MatFormFieldModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/dalci/OneDrive/Masaüstü/dotnet-angular-web-explorer/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/form-field.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, InjectionToken, NgZone, Optional, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16)(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15)(7, \"div\", 16)(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r13.updateOutlineGap()); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        /* Holds the previous direction emitted by directionality service change emitter.\n             This is used in updateOutlineGap() method to update the width and position of the gap in the\n             outline. Only relevant for the outline appearance. The direction is getting updated in the\n             UI after directionality service change emission. So the outlines gaps are getting\n             updated in updateOutlineGap() method before connectionContainer child direction change\n             in UI. We may get wrong calculations. So we are storing the previous direction to get the\n             correct outline calculations*/\n        this._previousDirection = 'ltr';\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this hacky workaround in order to support both Ivy\n        // and ViewEngine. We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateOutlineGap();\n                this._previousDirection = this._dir.value;\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!(/** @type {?} */ (document.documentElement)).contains(this._elementRef.nativeElement)) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls.item(i).style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls.item(i).style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return this._previousDirection === 'rtl' ? rect.right : rect.left;\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 7);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, dependencies: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline', { static: false },] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer', { static: false },] }],\n    _label: [{ type: ViewChild, args: ['label', { static: false },] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: false },] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel, { static: false },] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder, { static: false },] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError,] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint,] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix,] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{ selector: 'mat-form-field', exportAs: 'matFormField', template: \"<div class=\\\"mat-form-field-wrapper\\\"><div class=\\\"mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><ng-container *ngIf=\\\"appearance == 'outline'\\\"><div class=\\\"mat-form-field-outline\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div><div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\"><div class=\\\"mat-form-field-outline-start\\\"></div><div class=\\\"mat-form-field-outline-gap\\\"></div><div class=\\\"mat-form-field-outline-end\\\"></div></div></ng-container><div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper\\\"><label class=\\\"mat-form-field-label\\\" (cdkObserveContent)=\\\"updateOutlineGap()\\\" [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\" [id]=\\\"_labelId\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span></label></span></div><div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-form-field-underline\\\" #underline *ngIf=\\\"appearance != 'outline'\\\"><span class=\\\"mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\", animations: [matFormFieldAnimations.transitionMessages], host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}@media (-ms-high-contrast:active){.mat-form-field-infix{border-image:linear-gradient(transparent,transparent)}}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scaleY(1.0001)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(.5);opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none} .mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:'';display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button,.mat-input-element::-webkit-inner-spin-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:0 0}@media (-ms-high-contrast:active){.mat-focused select.mat-input-element::-ms-value{color:inherit}}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:'';width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px} .mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px} .mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-start{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start{border-width:2px;transition:border-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity .1s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline{transition:none} .mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}@media (-ms-high-contrast:active){.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity .6s cubic-bezier(.25,.8,.25,1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline', { static: false }]\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer', { static: false }]\n        }], _label: [{\n            type: ViewChild,\n            args: ['label', { static: false }]\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: false }]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: false }]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder, { static: false }]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        ObserversModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatFormFieldModule, MatError, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
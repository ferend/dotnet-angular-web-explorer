{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2)(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n  }\n}\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const item_r6 = restoredCtx.$implicit;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r8._cellClicked(item_r6));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n  }\n}\nfunction MatCalendarBody_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n  }\n}\nfunction MatMonthView_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n  }\n}\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) {}\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4.activeDate = $event);\n    })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r6._dateSelected($event));\n    })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r7._userSelected());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n  }\n}\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r8.activeDate = $event);\n    })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r10._monthSelectedInYearView($event));\n    })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r11._goToDateInView($event, \"month\"));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n  }\n}\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r12.activeDate = $event);\n    })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r14._yearSelectedInMultiYearView($event));\n    })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r15._goToDateInView($event, \"year\"));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n  }\n}\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n  return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` + `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` + `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n  constructor() {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    this.changes = new Subject();\n    /**\n     * A label for the calendar popup (used by screen readers).\n     */\n    this.calendarLabel = 'Calendar';\n    /**\n     * A label for the button used to open the calendar popup (used by screen readers).\n     */\n    this.openCalendarLabel = 'Open calendar';\n    /**\n     * A label for the previous month button (used by screen readers).\n     */\n    this.prevMonthLabel = 'Previous month';\n    /**\n     * A label for the next month button (used by screen readers).\n     */\n    this.nextMonthLabel = 'Next month';\n    /**\n     * A label for the previous year button (used by screen readers).\n     */\n    this.prevYearLabel = 'Previous year';\n    /**\n     * A label for the next year button (used by screen readers).\n     */\n    this.nextYearLabel = 'Next year';\n    /**\n     * A label for the previous multi-year button (used by screen readers).\n     */\n    this.prevMultiYearLabel = 'Previous 20 years';\n    /**\n     * A label for the next multi-year button (used by screen readers).\n     */\n    this.nextMultiYearLabel = 'Next 20 years';\n    /**\n     * A label for the 'switch to month view' button (used by screen readers).\n     */\n    this.switchToMonthViewLabel = 'Choose date';\n    /**\n     * A label for the 'switch to year view' button (used by screen readers).\n     */\n    this.switchToMultiYearViewLabel = 'Choose month and year';\n  }\n  /**\n   * Formats a range of years.\n   * @param {?} start\n   * @param {?} end\n   * @return {?}\n   */\n  formatYearRange(start, end) {\n    return `${start} \\u2013 ${end}`;\n  }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) {\n  return new (t || MatDatepickerIntl)();\n};\nMatDatepickerIntl.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MatDatepickerIntl,\n  factory: MatDatepickerIntl.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\nMatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({\n  factory: function MatDatepickerIntl_Factory() {\n    return new MatDatepickerIntl();\n  },\n  token: MatDatepickerIntl,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n  /**\n   * @param {?} value\n   * @param {?} displayValue\n   * @param {?} ariaLabel\n   * @param {?} enabled\n   * @param {?=} cssClasses\n   */\n  constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n    this.value = value;\n    this.displayValue = displayValue;\n    this.ariaLabel = ariaLabel;\n    this.enabled = enabled;\n    this.cssClasses = cssClasses;\n  }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   */\n  constructor(_elementRef, _ngZone) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    /**\n     * The number of columns in the table.\n     */\n    this.numCols = 7;\n    /**\n     * The cell number of the active cell in the table.\n     */\n    this.activeCell = 0;\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    this.cellAspectRatio = 1;\n    /**\n     * Emits when a new value is selected.\n     */\n    this.selectedValueChange = new EventEmitter();\n  }\n  /**\n   * @param {?} cell\n   * @return {?}\n   */\n  _cellClicked(cell) {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const columnChanges = changes['numCols'];\n    const {\n      rows,\n      numCols\n    } = this;\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n  /**\n   * @param {?} rowIndex\n   * @param {?} colIndex\n   * @return {?}\n   */\n  _isActiveCell(rowIndex, colIndex) {\n    /** @type {?} */\n    let cellNumber = rowIndex * this.numCols + colIndex;\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n    return cellNumber == this.activeCell;\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        /** @type {?} */\n        const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) {\n  return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nMatCalendarBody.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarBody,\n  selectors: [[\"\", \"mat-calendar-body\", \"\"]],\n  hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"],\n  inputs: {\n    numCols: \"numCols\",\n    activeCell: \"activeCell\",\n    cellAspectRatio: \"cellAspectRatio\",\n    label: \"label\",\n    rows: \"rows\",\n    todayValue: \"todayValue\",\n    selectedValue: \"selectedValue\",\n    labelMinRequiredCells: \"labelMinRequiredCells\"\n  },\n  outputs: {\n    selectedValueChange: \"selectedValueChange\"\n  },\n  exportAs: [\"matCalendarBody\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]],\n  template: function MatCalendarBody_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n      ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}];\nMatCalendarBody.propDecorators = {\n  label: [{\n    type: Input\n  }],\n  rows: [{\n    type: Input\n  }],\n  todayValue: [{\n    type: Input\n  }],\n  selectedValue: [{\n    type: Input\n  }],\n  labelMinRequiredCells: [{\n    type: Input\n  }],\n  numCols: [{\n    type: Input\n  }],\n  activeCell: [{\n    type: Input\n  }],\n  cellAspectRatio: [{\n    type: Input\n  }],\n  selectedValueChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n    type: Component,\n    args: [{\n      selector: '[mat-calendar-body]',\n      template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" role=\\\"button\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\",\n      host: {\n        'class': 'mat-calendar-body',\n        'role': 'grid',\n        'aria-readonly': 'true'\n      },\n      exportAs: 'matCalendarBody',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    numCols: [{\n      type: Input\n    }],\n    activeCell: [{\n      type: Input\n    }],\n    cellAspectRatio: [{\n      type: Input\n    }],\n    selectedValueChange: [{\n      type: Output\n    }],\n    label: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    todayValue: [{\n      type: Input\n    }],\n    selectedValue: [{\n      type: Input\n    }],\n    labelMinRequiredCells: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new date is selected.\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n    this.activeDateChange = new EventEmitter();\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   * @return {?}\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set activeDate(value) {\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Handles when a new date is selected.\n   * @param {?} date\n   * @return {?}\n   */\n  _dateSelected(date) {\n    if (this._selectedDate != date) {\n      /** @type {?} */\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      /** @type {?} */\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      /** @type {?} */\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n      this.selectedChange.emit(selectedDate);\n    }\n    this._userSelection.emit();\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in month view.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /**\n   * Initializes this month view.\n   * @return {?}\n   */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel = this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n    /** @type {?} */\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Initializes the weekdays.\n   * @private\n   * @return {?}\n   */\n  _initWeekdays() {\n    /** @type {?} */\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    /** @type {?} */\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    /** @type {?} */\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    /** @type {?} */\n    let weekdays = longWeekdays.map(\n    /**\n    * @param {?} long\n    * @param {?} i\n    * @return {?}\n    */\n    (long, i) => {\n      return {\n        long,\n        narrow: narrowWeekdays[i]\n      };\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n  /**\n   * Creates MatCalendarCells for the dates in this month.\n   * @private\n   * @return {?}\n   */\n  _createWeekCells() {\n    /** @type {?} */\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    /** @type {?} */\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      /** @type {?} */\n      const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n      /** @type {?} */\n      const enabled = this._shouldEnableDate(date);\n      /** @type {?} */\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      /** @type {?} */\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n  /**\n   * Date filter for the month\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n  _shouldEnableDate(date) {\n    return !!date && (!this.dateFilter || this.dateFilter(date)) && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n  _getDateInCurrentMonth(date) {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\n  }\n  /**\n   * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n   * @private\n   * @param {?} d1\n   * @param {?} d2\n   * @return {?}\n   */\n  _hasSameMonthAndYear(d1, d2) {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) {\n  return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\nMatMonthView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMonthView,\n  selectors: [[\"mat-month-view\"]],\n  viewQuery: function MatMonthView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    _userSelection: \"_userSelection\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMonthView\"],\n  decls: 7,\n  vars: 7,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]],\n  template: function MatMonthView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"tr\");\n      ɵngcc0.ɵɵelement(5, \"th\", 3);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) {\n        return ctx._dateSelected($event);\n      })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    }\n  },\n  dependencies: [ɵngcc1.NgForOf, MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatMonthView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-month-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMonthView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new year is selected.\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected year. This doesn't imply a change on the selected date\n     */\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n    this.activeDateChange = new EventEmitter();\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this multi-year view (everything other than the year is ignored).\n   * @return {?}\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set activeDate(value) {\n    /** @type {?} */\n    let oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Initializes this multi-year view.\n   * @return {?}\n   */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    /** @type {?} */\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    /** @type {?} */\n    const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    this._years = [];\n    for (let i = 0, row = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(\n        /**\n        * @param {?} year\n        * @return {?}\n        */\n        year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Handles when a new year is selected.\n   * @param {?} year\n   * @return {?}\n   */\n  _yearSelected(year) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    /** @type {?} */\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    /** @type {?} */\n    let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in multi-year view.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleCalendarBodyKeydown(event) {\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /**\n   * @return {?}\n   */\n  _getActiveCell() {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Creates an MatCalendarCell for the given year.\n   * @private\n   * @param {?} year\n   * @return {?}\n   */\n  _createCellForYear(year) {\n    /** @type {?} */\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n  /**\n   * Whether the given year is enabled.\n   * @private\n   * @param {?} year\n   * @return {?}\n   */\n  _shouldEnableYear(year) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {\n      return false;\n    }\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n    /** @type {?} */\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) {\n  return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\nMatMultiYearView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMultiYearView,\n  selectors: [[\"mat-multi-year-view\"]],\n  viewQuery: function MatMultiYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matMultiYearView\"],\n  decls: 5,\n  vars: 6,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatMultiYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._yearSelected($event);\n      })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    }\n  },\n  dependencies: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatMultiYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-multi-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matMultiYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody, {\n        static: false\n      }]\n    }]\n  });\n})();\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n  /** @type {?} */\n  const year1 = dateAdapter.getYear(date1);\n  /** @type {?} */\n  const year2 = dateAdapter.getYear(date2);\n  /** @type {?} */\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n  /** @type {?} */\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n  /** @type {?} */\n  let startingYear = 0;\n  if (maxDate) {\n    /** @type {?} */\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n  return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _dateFormats\n   * @param {?} _dateAdapter\n   * @param {?=} _dir\n   */\n  constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dateFormats = _dateFormats;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    /**\n     * Emits when a new month is selected.\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the selected month. This doesn't imply a change on the selected date\n     */\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is activated.\n     */\n    this.activeDateChange = new EventEmitter();\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n    this._activeDate = this._dateAdapter.today();\n  }\n  /**\n   * The date to display in this year view (everything other than the year is ignored).\n   * @return {?}\n   */\n  get activeDate() {\n    return this._activeDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set activeDate(value) {\n    /** @type {?} */\n    let oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._init();\n  }\n  /**\n   * Handles when a new month is selected.\n   * @param {?} month\n   * @return {?}\n   */\n  _monthSelected(month) {\n    /** @type {?} */\n    const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    this.monthSelected.emit(normalizedDate);\n    /** @type {?} */\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n    this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n  /**\n   * Handles keydown events on the calendar body when calendar is in year view.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleCalendarBodyKeydown(event) {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    /** @type {?} */\n    const oldActiveDate = this._activeDate;\n    /** @type {?} */\n    const isRtl = this._isRtl();\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n  /**\n   * Initializes this year view.\n   * @return {?}\n   */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n    /** @type {?} */\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(\n    /**\n    * @param {?} row\n    * @return {?}\n    */\n    row => row.map(\n    /**\n    * @param {?} month\n    * @return {?}\n    */\n    month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Focuses the active cell after the microtask queue is empty.\n   * @return {?}\n   */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   * @private\n   * @param {?} date\n   * @return {?}\n   */\n  _getMonthInCurrentYear(date) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;\n  }\n  /**\n   * Creates an MatCalendarCell for the given month.\n   * @private\n   * @param {?} month\n   * @param {?} monthName\n   * @return {?}\n   */\n  _createCellForMonth(month, monthName) {\n    /** @type {?} */\n    let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n  /**\n   * Whether the given month is enabled.\n   * @private\n   * @param {?} month\n   * @return {?}\n   */\n  _shouldEnableMonth(month) {\n    /** @type {?} */\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n    if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n    if (!this.dateFilter) {\n      return true;\n    }\n    /** @type {?} */\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @return {?}\n   */\n  _isYearAndMonthAfterMaxDate(year, month) {\n    if (this.maxDate) {\n      /** @type {?} */\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      /** @type {?} */\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n      return year > maxYear || year === maxYear && month > maxMonth;\n    }\n    return false;\n  }\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   * @private\n   * @param {?} year\n   * @param {?} month\n   * @return {?}\n   */\n  _isYearAndMonthBeforeMinDate(year, month) {\n    if (this.minDate) {\n      /** @type {?} */\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      /** @type {?} */\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n      return year < minYear || year === minYear && month < minMonth;\n    }\n    return false;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Determines whether the user has the RTL layout direction.\n   * @private\n   * @return {?}\n   */\n  _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) {\n  return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8));\n};\nMatYearView.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatYearView,\n  selectors: [[\"mat-year-view\"]],\n  viewQuery: function MatYearView_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    }\n  },\n  inputs: {\n    activeDate: \"activeDate\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    dateFilter: \"dateFilter\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    monthSelected: \"monthSelected\",\n    activeDateChange: \"activeDateChange\"\n  },\n  exportAs: [\"matYearView\"],\n  decls: 5,\n  vars: 8,\n  consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]],\n  template: function MatYearView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n      ɵngcc0.ɵɵelement(3, \"th\", 2);\n      ɵngcc0.ɵɵelementEnd()();\n      ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n      ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {\n        return ctx._monthSelected($event);\n      })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) {\n        return ctx._handleCalendarBodyKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    }\n  },\n  dependencies: [MatCalendarBody],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatYearView.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatYearView.propDecorators = {\n  activeDate: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  _matCalendarBody: [{\n    type: ViewChild,\n    args: [MatCalendarBody, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n    type: Component,\n    args: [{\n      selector: 'mat-year-view',\n      template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n      exportAs: 'matYearView',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    selectedChange: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    activeDate: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    _matCalendarBody: [{\n      type: ViewChild,\n      args: [MatCalendarBody, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n  /**\n   * @param {?} _intl\n   * @param {?} calendar\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} changeDetectorRef\n   */\n  constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n    this._intl = _intl;\n    this.calendar = calendar;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this.calendar.stateChanges.subscribe(\n    /**\n    * @return {?}\n    */\n    () => changeDetectorRef.markForCheck());\n  }\n  /**\n   * The label for the current calendar view.\n   * @return {?}\n   */\n  get periodButtonText() {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    /** @type {?} */\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    /** @type {?} */\n    const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    /** @type {?} */\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    /** @type {?} */\n    const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    /** @type {?} */\n    const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n  /**\n   * @return {?}\n   */\n  get periodButtonLabel() {\n    return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n  /**\n   * The label for the previous button.\n   * @return {?}\n   */\n  get prevButtonLabel() {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /**\n   * The label for the next button.\n   * @return {?}\n   */\n  get nextButtonLabel() {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n  /**\n   * Handles user clicks on the period label.\n   * @return {?}\n   */\n  currentPeriodClicked() {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n  /**\n   * Handles user clicks on the previous button.\n   * @return {?}\n   */\n  previousClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n  }\n  /**\n   * Handles user clicks on the next button.\n   * @return {?}\n   */\n  nextClicked() {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n  }\n  /**\n   * Whether the previous period button is enabled.\n   * @return {?}\n   */\n  previousEnabled() {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n  /**\n   * Whether the next period button is enabled.\n   * @return {?}\n   */\n  nextEnabled() {\n    return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n  /**\n   * Whether the two dates represent the same view in the current view mode (month or year).\n   * @private\n   * @param {?} date1\n   * @param {?} date2\n   * @return {?}\n   */\n  _isSameView(date1, date2) {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) {\n  return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendarHeader,\n  selectors: [[\"mat-calendar-header\"]],\n  exportAs: [\"matCalendarHeader\"],\n  ngContentSelectors: _c1,\n  decls: 9,\n  vars: 8,\n  consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]],\n  template: function MatCalendarHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() {\n        return ctx.currentPeriodClicked();\n      });\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelement(4, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(5, \"div\", 4);\n      ɵngcc0.ɵɵprojection(6);\n      ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() {\n        return ctx.previousClicked();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() {\n        return ctx.nextClicked();\n      });\n      ɵngcc0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    }\n  },\n  dependencies: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: MatCalendar,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatCalendar)]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar-header',\n      template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n      exportAs: 'matCalendarHeader',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: MatCalendar,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        () => MatCalendar)]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n  /**\n   * @param {?} _intl\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _changeDetectorRef\n   */\n  constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    this._moveFocusOnNextTick = false;\n    /**\n     * Whether the calendar should be started in month or year view.\n     */\n    this.startView = 'month';\n    /**\n     * Emits when the currently selected date changes.\n     */\n    this.selectedChange = new EventEmitter();\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when any date is selected.\n     */\n    this._userSelection = new EventEmitter();\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    this.stateChanges = new Subject();\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n    this._intlChanges = _intl.changes.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n  /**\n   * A date representing the period (month or year) to start the calendar in.\n   * @return {?}\n   */\n  get startAt() {\n    return this._startAt;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set startAt(value) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set selected(value) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n  get minDate() {\n    return this._minDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set minDate(value) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n  get maxDate() {\n    return this._maxDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set maxDate(value) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   * @return {?}\n   */\n  get activeDate() {\n    return this._clampedActiveDate;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set activeDate(value) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Whether the calendar is in month view.\n   * @return {?}\n   */\n  get currentView() {\n    return this._currentView;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set currentView(value) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    /** @type {?} */\n    const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n    if (change && !change.firstChange) {\n      /** @type {?} */\n      const view = this._getCurrentViewComponent();\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /**\n   * @return {?}\n   */\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n  /**\n   * Updates today's date after an update of the active date\n   * @return {?}\n   */\n  updateTodaysDate() {\n    /** @type {?} */\n    let view = this.currentView == 'month' ? this.monthView : this.currentView == 'year' ? this.yearView : this.multiYearView;\n    view.ngAfterContentInit();\n  }\n  /**\n   * Handles date selection in the month view.\n   * @param {?} date\n   * @return {?}\n   */\n  _dateSelected(date) {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n  /**\n   * Handles year selection in the multiyear view.\n   * @param {?} normalizedYear\n   * @return {?}\n   */\n  _yearSelectedInMultiYearView(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /**\n   * Handles month selection in the year view.\n   * @param {?} normalizedMonth\n   * @return {?}\n   */\n  _monthSelectedInYearView(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /**\n   * @return {?}\n   */\n  _userSelected() {\n    this._userSelection.emit();\n  }\n  /**\n   * Handles year/month selection in the multi-year/year views.\n   * @param {?} date\n   * @param {?} view\n   * @return {?}\n   */\n  _goToDateInView(date, view) {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Returns the component instance that corresponds to the current calendar view.\n   * @private\n   * @return {?}\n   */\n  _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) {\n  return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nMatCalendar.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatCalendar,\n  selectors: [[\"mat-calendar\"]],\n  viewQuery: function MatCalendar_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n      ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n      ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-calendar\"],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    selected: \"selected\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    headerComponent: \"headerComponent\",\n    dateFilter: \"dateFilter\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    selectedChange: \"selectedChange\",\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    _userSelection: \"_userSelection\"\n  },\n  exportAs: [\"matCalendar\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]],\n  template: function MatCalendar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n      ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n      ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    }\n  },\n  dependencies: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc5.CdkMonitorFocus, ɵngcc6.CdkPortalOutlet, MatMonthView, MatYearView, MatMultiYearView],\n  styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\nMatCalendar.propDecorators = {\n  headerComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  minDate: [{\n    type: Input\n  }],\n  maxDate: [{\n    type: Input\n  }],\n  dateFilter: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  selectedChange: [{\n    type: Output\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  _userSelection: [{\n    type: Output\n  }],\n  monthView: [{\n    type: ViewChild,\n    args: [MatMonthView, {\n      static: false\n    }]\n  }],\n  yearView: [{\n    type: ViewChild,\n    args: [MatYearView, {\n      static: false\n    }]\n  }],\n  multiYearView: [{\n    type: ViewChild,\n    args: [MatMultiYearView, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-calendar',\n      template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\",\n      host: {\n        'class': 'mat-calendar'\n      },\n      exportAs: 'matCalendar',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    _userSelection: [{\n      type: Output\n    }],\n    startAt: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    headerComponent: [{\n      type: Input\n    }],\n    dateFilter: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [MatMonthView, {\n        static: false\n      }]\n    }],\n    yearView: [{\n      type: ViewChild,\n      args: [MatYearView, {\n        static: false\n      }]\n    }],\n    multiYearView: [{\n      type: ViewChild,\n      args: [MatMultiYearView, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n  /**\n   * Transforms the height of the datepicker's calendar.\n   */\n  transformPanel: trigger('transformPanel', [state('void', style({\n    opacity: 0,\n    transform: 'scale(1, 0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1, 1)'\n  }))), transition('* => void', animate('100ms linear', style({\n    opacity: 0\n  })))]),\n  /**\n   * Fades in the content of the calendar.\n   */\n  fadeInCalendar: trigger('fadeInCalendar', [state('void', style({\n    opacity: 0\n  })), state('enter', style({\n    opacity: 1\n  })),\n  // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n  transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n  return (\n    /**\n    * @return {?}\n    */\n    () => overlay.scrollStrategies.reposition()\n  );\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n  /**\n   * @param {?} elementRef\n   */\n  constructor(elementRef) {\n    super(elementRef);\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) {\n  return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerContent,\n  selectors: [[\"mat-datepicker-content\"]],\n  viewQuery: function MatDatepickerContent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-content\"],\n  hostVars: 3,\n  hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matDatepickerContent\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 11,\n  consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]],\n  template: function MatDatepickerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n      ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) {\n        return ctx.datepicker.select($event);\n      })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) {\n        return ctx.datepicker._selectYear($event);\n      })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) {\n        return ctx.datepicker._selectMonth($event);\n      })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() {\n        return ctx.datepicker.close();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    }\n  },\n  dependencies: [ɵngcc1.NgClass, ɵngcc5.CdkTrapFocus, MatCalendar],\n  styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [{\n  type: ElementRef\n}];\nMatDatepickerContent.propDecorators = {\n  _calendar: [{\n    type: ViewChild,\n    args: [MatCalendar, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-content',\n      template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\",\n      host: {\n        'class': 'mat-datepicker-content',\n        '[@transformPanel]': '\"enter\"',\n        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n      },\n      animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar],\n      exportAs: 'matDatepickerContent',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['color'],\n      styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    _calendar: [{\n      type: ViewChild,\n      args: [MatCalendar, {\n        static: false\n      }]\n    }]\n  });\n})();\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n  /**\n   * @param {?} _dialog\n   * @param {?} _overlay\n   * @param {?} _ngZone\n   * @param {?} _viewContainerRef\n   * @param {?} scrollStrategy\n   * @param {?} _dateAdapter\n   * @param {?} _dir\n   * @param {?} _document\n   */\n  constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n    this._dialog = _dialog;\n    this._overlay = _overlay;\n    this._ngZone = _ngZone;\n    this._viewContainerRef = _viewContainerRef;\n    this._dateAdapter = _dateAdapter;\n    this._dir = _dir;\n    this._document = _document;\n    /**\n     * The view that the calendar should start in.\n     */\n    this.startView = 'month';\n    this._touchUi = false;\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    this.yearSelected = new EventEmitter();\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    this.monthSelected = new EventEmitter();\n    /**\n     * Emits when the datepicker has been opened.\n     */\n    this.openedStream = new EventEmitter();\n    /**\n     * Emits when the datepicker has been closed.\n     */\n    this.closedStream = new EventEmitter();\n    this._opened = false;\n    /**\n     * The id for the datepicker calendar.\n     */\n    this.id = `mat-datepicker-${datepickerUid++}`;\n    this._validSelected = null;\n    /**\n     * The element that was focused before the datepicker was opened.\n     */\n    this._focusedElementBeforeOpen = null;\n    /**\n     * Subscription to value changes in the associated input element.\n     */\n    this._inputSubscription = Subscription.EMPTY;\n    /**\n     * Emits when the datepicker is disabled.\n     */\n    this._disabledChange = new Subject();\n    /**\n     * Emits new selected date when selected date changes.\n     */\n    this._selectedChanged = new Subject();\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    this._scrollStrategy = scrollStrategy;\n  }\n  /**\n   * The date to open the calendar to initially.\n   * @return {?}\n   */\n  get startAt() {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set startAt(value) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  /**\n   * Color palette to use on the datepicker's calendar.\n   * @return {?}\n   */\n  get color() {\n    return this._color || (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set color(value) {\n    this._color = value;\n  }\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   * @return {?}\n   */\n  get touchUi() {\n    return this._touchUi;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set touchUi(value) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the datepicker pop-up should be disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled === undefined && this._datepickerInput ? this._datepickerInput.disabled : !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  /**\n   * Whether the calendar is open.\n   * @return {?}\n   */\n  get opened() {\n    return this._opened;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set opened(value) {\n    value ? this.open() : this.close();\n  }\n  /**\n   * The currently selected date.\n   * @return {?}\n   */\n  get _selected() {\n    return this._validSelected;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set _selected(value) {\n    this._validSelected = value;\n  }\n  /**\n   * The minimum selectable date.\n   * @return {?}\n   */\n  get _minDate() {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n  /**\n   * The maximum selectable date.\n   * @return {?}\n   */\n  get _maxDate() {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n  /**\n   * @return {?}\n   */\n  get _dateFilter() {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupComponentRef = null;\n    }\n  }\n  /**\n   * Selects the given date\n   * @param {?} date\n   * @return {?}\n   */\n  select(date) {\n    /** @type {?} */\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n  /**\n   * Emits the selected year in multiyear view\n   * @param {?} normalizedYear\n   * @return {?}\n   */\n  _selectYear(normalizedYear) {\n    this.yearSelected.emit(normalizedYear);\n  }\n  /**\n   * Emits selected month in year view\n   * @param {?} normalizedMonth\n   * @return {?}\n   */\n  _selectMonth(normalizedMonth) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n  /**\n   * Register an input with this datepicker.\n   * @param {?} input The datepicker input to register with this datepicker.\n   * @return {?}\n   */\n  _registerInput(input) {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription = this._datepickerInput._valueChange.subscribe(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    value => this._selected = value);\n  }\n  /**\n   * Open the calendar.\n   * @return {?}\n   */\n  open() {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n  /**\n   * Close the calendar.\n   * @return {?}\n   */\n  close() {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    /** @type {?} */\n    const completeClose =\n    /**\n    * @return {?}\n    */\n    () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n    if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n  /**\n   * Open the calendar as a dialog.\n   * @private\n   * @return {?}\n   */\n  _openAsDialog() {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n    this._dialogRef = this._dialog.open(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog'\n    });\n    this._dialogRef.afterClosed().subscribe(\n    /**\n    * @return {?}\n    */\n    () => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._setColor();\n  }\n  /**\n   * Open the calendar as a popup.\n   * @private\n   * @return {?}\n   */\n  _openAsPopup() {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n    }\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n    if (!this._popupRef.hasAttached()) {\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n      this._popupComponentRef.instance.datepicker = this;\n      this._setColor();\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._popupRef.updatePosition();\n      });\n    }\n  }\n  /**\n   * Create the popup.\n   * @private\n   * @return {?}\n   */\n  _createPopup() {\n    /** @type {?} */\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup'\n    });\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n    merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      // Closing on alt + up is only valid when there's an input associated with the datepicker.\n      return event.keyCode === ESCAPE || this._datepickerInput && event.altKey && event.keyCode === UP_ARROW;\n    }))).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      if (event) {\n        event.preventDefault();\n      }\n      this.close();\n    });\n  }\n  /**\n   * Create the popup PositionStrategy.\n   * @private\n   * @return {?}\n   */\n  _createPopupPositionStrategy() {\n    return this._overlay.position().flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition().withPositions([{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom'\n    }]);\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n  /**\n   * Passes the current theme color along to the calendar overlay.\n   * @private\n   * @return {?}\n   */\n  _setColor() {\n    /** @type {?} */\n    const color = this.color;\n    if (this._popupComponentRef) {\n      this._popupComponentRef.instance.color = color;\n    }\n    if (this._dialogRef) {\n      this._dialogRef.componentInstance.color = color;\n    }\n  }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) {\n  return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\nMatDatepicker.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepicker,\n  selectors: [[\"mat-datepicker\"]],\n  inputs: {\n    startView: \"startView\",\n    startAt: \"startAt\",\n    color: \"color\",\n    touchUi: \"touchUi\",\n    disabled: \"disabled\",\n    opened: \"opened\",\n    calendarHeaderComponent: \"calendarHeaderComponent\",\n    panelClass: \"panelClass\",\n    dateClass: \"dateClass\"\n  },\n  outputs: {\n    yearSelected: \"yearSelected\",\n    monthSelected: \"monthSelected\",\n    openedStream: \"opened\",\n    closedStream: \"closed\"\n  },\n  exportAs: [\"matDatepicker\"],\n  decls: 0,\n  vars: 0,\n  template: function MatDatepicker_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [{\n  type: MatDialog\n}, {\n  type: Overlay\n}, {\n  type: NgZone\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n  }]\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\nMatDatepicker.propDecorators = {\n  calendarHeaderComponent: [{\n    type: Input\n  }],\n  startAt: [{\n    type: Input\n  }],\n  startView: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  touchUi: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  yearSelected: [{\n    type: Output\n  }],\n  monthSelected: [{\n    type: Output\n  }],\n  panelClass: [{\n    type: Input\n  }],\n  dateClass: [{\n    type: Input\n  }],\n  openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  opened: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker',\n      template: '',\n      exportAs: 'matDatepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc7.MatDialog\n    }, {\n      type: ɵngcc8.Overlay\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc3.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    startView: [{\n      type: Input\n    }],\n    yearSelected: [{\n      type: Output\n    }],\n    monthSelected: [{\n      type: Output\n    }],\n    openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    startAt: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    touchUi: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    calendarHeaderComponent: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    dateClass: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatDatepickerInput),\n  multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatDatepickerInput),\n  multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n  /**\n   * @param {?} target\n   * @param {?} targetElement\n   */\n  constructor(target, targetElement) {\n    this.target = target;\n    this.targetElement = targetElement;\n    this.value = this.target.value;\n  }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _dateAdapter\n   * @param {?} _dateFormats\n   * @param {?} _formField\n   */\n  constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n    this._elementRef = _elementRef;\n    this._dateAdapter = _dateAdapter;\n    this._dateFormats = _dateFormats;\n    this._formField = _formField;\n    /**\n     * Emits when a `change` event is fired on this `<input>`.\n     */\n    this.dateChange = new EventEmitter();\n    /**\n     * Emits when an `input` event is fired on this `<input>`.\n     */\n    this.dateInput = new EventEmitter();\n    /**\n     * Emits when the value changes (either due to user input or programmatic change).\n     */\n    this._valueChange = new EventEmitter();\n    /**\n     * Emits when the disabled state has changed\n     */\n    this._disabledChange = new EventEmitter();\n    this._onTouched =\n    /**\n    * @return {?}\n    */\n    () => {};\n    this._cvaOnChange =\n    /**\n    * @return {?}\n    */\n    () => {};\n    this._validatorOnChange =\n    /**\n    * @return {?}\n    */\n    () => {};\n    this._datepickerSubscription = Subscription.EMPTY;\n    this._localeSubscription = Subscription.EMPTY;\n    /**\n     * The form control validator for whether the input parses.\n     */\n    this._parseValidator =\n    /**\n    * @return {?}\n    */\n    () => {\n      return this._lastValueValid ? null : {\n        'matDatepickerParse': {\n          'text': this._elementRef.nativeElement.value\n        }\n      };\n    };\n    /**\n     * The form control validator for the min date.\n     */\n    this._minValidator =\n    /**\n    * @param {?} control\n    * @return {?}\n    */\n    control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this.min || !controlValue || this._dateAdapter.compareDate(this.min, controlValue) <= 0 ? null : {\n        'matDatepickerMin': {\n          'min': this.min,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the max date.\n     */\n    this._maxValidator =\n    /**\n    * @param {?} control\n    * @return {?}\n    */\n    control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this.max || !controlValue || this._dateAdapter.compareDate(this.max, controlValue) >= 0 ? null : {\n        'matDatepickerMax': {\n          'max': this.max,\n          'actual': controlValue\n        }\n      };\n    };\n    /**\n     * The form control validator for the date filter.\n     */\n    this._filterValidator =\n    /**\n    * @param {?} control\n    * @return {?}\n    */\n    control => {\n      /** @type {?} */\n      const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n      return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ? null : {\n        'matDatepickerFilter': true\n      };\n    };\n    /**\n     * The combined form control validator for this input.\n     */\n    this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n    /**\n     * Whether the last value set on the input was valid.\n     */\n    this._lastValueValid = false;\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.value = this.value;\n    });\n  }\n  /**\n   * The datepicker that this input is associated with.\n   * @param {?} value\n   * @return {?}\n   */\n  set matDatepicker(value) {\n    if (!value) {\n      return;\n    }\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe(\n    /**\n    * @param {?} selected\n    * @return {?}\n    */\n    selected => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  /**\n   * Function that can be used to filter out dates within the datepicker.\n   * @param {?} value\n   * @return {?}\n   */\n  set matDatepickerFilter(value) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  /**\n   * The value of the input.\n   * @return {?}\n   */\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set value(value) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    /** @type {?} */\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  /**\n   * The minimum valid date.\n   * @return {?}\n   */\n  get min() {\n    return this._min;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set min(value) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  /**\n   * The maximum valid date.\n   * @return {?}\n   */\n  get max() {\n    return this._max;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set max(value) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  /**\n   * Whether the datepicker-input is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    /** @type {?} */\n    const newValue = coerceBooleanProperty(value);\n    /** @type {?} */\n    const element = this._elementRef.nativeElement;\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    if (newValue && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n  /**\n   * \\@docs-private\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  /**\n   * \\@docs-private\n   * @param {?} c\n   * @return {?}\n   */\n  validate(c) {\n    return this._validator ? this._validator(c) : null;\n  }\n  /**\n   * @deprecated\n   * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   * @return {?}\n   */\n  getPopupConnectionElementRef() {\n    return this.getConnectedOverlayOrigin();\n  }\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return {?} The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n  // Implemented as part of ControlValueAccessor.\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  writeValue(value) {\n    this.value = value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this._cvaOnChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  /**\n   * @param {?} fn\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  /**\n   * @param {?} isDisabled\n   * @return {?}\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onKeydown(event) {\n    /** @type {?} */\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  _onInput(value) {\n    /** @type {?} */\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      this._validatorOnChange();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n  /**\n   * Returns the palette used by the input's form field, if any.\n   * @return {?}\n   */\n  _getThemePalette() {\n    return this._formField ? this._formField.color : undefined;\n  }\n  /**\n   * Handles blur events on the input.\n   * @return {?}\n   */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n    this._onTouched();\n  }\n  /**\n   * Formats a value and sets it on the input element.\n   * @private\n   * @param {?} value\n   * @return {?}\n   */\n  _formatValue(value) {\n    this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n  /**\n   * @private\n   * @param {?} obj The object to check.\n   * @return {?} The given object if it is both a date instance and valid, otherwise null.\n   */\n  _getValidDateOrNull(obj) {\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\n  }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) {\n  return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8));\n};\nMatDatepickerInput.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerInput,\n  selectors: [[\"input\", \"matDatepicker\", \"\"]],\n  hostVars: 5,\n  hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) {\n        return ctx._onInput($event.target.value);\n      })(\"change\", function MatDatepickerInput_change_HostBindingHandler() {\n        return ctx._onChange();\n      })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    matDatepicker: \"matDatepicker\",\n    matDatepickerFilter: \"matDatepickerFilter\",\n    min: \"min\",\n    max: \"max\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    dateChange: \"dateChange\",\n    dateInput: \"dateInput\"\n  },\n  exportAs: [\"matDatepickerInput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n    provide: MAT_INPUT_VALUE_ACCESSOR,\n    useExisting: MatDatepickerInput\n  }])]\n});\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: DateAdapter,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_FORMATS]\n  }]\n}, {\n  type: MatFormField,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatDatepickerInput.propDecorators = {\n  matDatepicker: [{\n    type: Input\n  }],\n  matDatepickerFilter: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  dateChange: [{\n    type: Output\n  }],\n  dateInput: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matDatepicker]',\n      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {\n        provide: MAT_INPUT_VALUE_ACCESSOR,\n        useExisting: MatDatepickerInput\n      }],\n      host: {\n        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': '_onInput($event.target.value)',\n        '(change)': '_onChange()',\n        '(blur)': '_onBlur()',\n        '(keydown)': '_onKeydown($event)'\n      },\n      exportAs: 'matDatepickerInput'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.DateAdapter,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_FORMATS]\n      }]\n    }, {\n      type: ɵngcc9.MatFormField,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    dateChange: [{\n      type: Output\n    }],\n    dateInput: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    matDatepicker: [{\n      type: Input\n    }],\n    matDatepickerFilter: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) {\n  return new (t || MatDatepickerToggleIcon)();\n};\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatDatepickerToggleIcon,\n  selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n    type: Directive,\n    args: [{\n      selector: '[matDatepickerToggleIcon]'\n    }]\n  }], null, null);\n})();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n  /**\n   * @param {?} _intl\n   * @param {?} _changeDetectorRef\n   * @param {?} defaultTabIndex\n   */\n  constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n    this._intl = _intl;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._stateChanges = Subscription.EMPTY;\n    /** @type {?} */\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n  }\n  /**\n   * Whether the toggle button is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n    return !!this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _open(event) {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _watchStateChanges() {\n    /** @type {?} */\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n    /** @type {?} */\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ? this.datepicker._datepickerInput._disabledChange : of();\n    /** @type {?} */\n    const datepickerToggled = this.datepicker ? merge(this.datepicker.openedStream, this.datepicker.closedStream) : of();\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe(\n    /**\n    * @return {?}\n    */\n    () => this._changeDetectorRef.markForCheck());\n  }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) {\n  return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'));\n};\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDatepickerToggle,\n  selectors: [[\"mat-datepicker-toggle\"]],\n  contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    }\n  },\n  viewQuery: function MatDatepickerToggle_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-datepicker-toggle\"],\n  hostVars: 7,\n  hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() {\n        return ctx._button.focus();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n      ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    }\n  },\n  inputs: {\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\",\n    datepicker: [\"for\", \"datepicker\"],\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matDatepickerToggle\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 6,\n  consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]],\n  template: function MatDatepickerToggle_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) {\n        return ctx._open($event);\n      });\n      ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n      ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    }\n  },\n  dependencies: [ɵngcc1.NgIf, ɵngcc4.MatButton],\n  styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [{\n  type: MatDatepickerIntl\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}];\nMatDatepickerToggle.propDecorators = {\n  datepicker: [{\n    type: Input,\n    args: ['for']\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  disableRipple: [{\n    type: Input\n  }],\n  _customIcon: [{\n    type: ContentChild,\n    args: [MatDatepickerToggleIcon, {\n      static: false\n    }]\n  }],\n  _button: [{\n    type: ViewChild,\n    args: ['button', {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-datepicker-toggle',\n      template: \"<button #button mat-icon-button type=\\\"button\\\" [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\",\n      host: {\n        'class': 'mat-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n        '(focus)': '_button.focus()'\n      },\n      exportAs: 'matDatepickerToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"]\n    }]\n  }], function () {\n    return [{\n      type: MatDatepickerIntl\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }];\n  }, {\n    tabIndex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    datepicker: [{\n      type: Input,\n      args: ['for']\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    _customIcon: [{\n      type: ContentChild,\n      args: [MatDatepickerToggleIcon, {\n        static: false\n      }]\n    }],\n    _button: [{\n      type: ViewChild,\n      args: ['button', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) {\n  return new (t || MatDatepickerModule)();\n};\nMatDatepickerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatDatepickerModule\n});\nMatDatepickerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule],\n      exports: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      declarations: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader],\n      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      entryComponents: [MatDatepickerContent, MatCalendarHeader]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, {\n    declarations: function () {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    },\n    imports: function () {\n      return [CommonModule, MatButtonModule, MatDialogModule, OverlayModule, A11yModule, PortalModule];\n    },\n    exports: function () {\n      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };","map":{"version":3,"names":["Injectable","NgModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","ElementRef","NgZone","InjectionToken","ViewContainerRef","Directive","Attribute","ContentChild","ɵɵdefineInjectable","Subject","merge","Subscription","of","take","filter","DOWN_ARROW","END","ENTER","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","SPACE","ESCAPE","DateAdapter","MAT_DATE_FORMATS","mixinColor","Directionality","ComponentPortal","PortalModule","animate","state","style","transition","trigger","coerceBooleanProperty","Overlay","OverlayConfig","OverlayModule","DOCUMENT","CommonModule","MatDialog","MatDialogModule","NG_VALIDATORS","NG_VALUE_ACCESSOR","Validators","MatFormField","MAT_INPUT_VALUE_ACCESSOR","MatButtonModule","A11yModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","ɵngcc6","ɵngcc7","ɵngcc8","ɵngcc9","_c0","MatCalendarBody_tr_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","_cellPadding","ɵɵattribute","numCols","ɵɵtextInterpolate","label","MatCalendarBody_tr_1_td_1_Template","ctx_r4","_firstRowOffset","labelMinRequiredCells","MatCalendarBody_tr_1_td_2_Template","_r9","ɵɵgetCurrentView","ɵɵlistener","MatCalendarBody_tr_1_td_2_Template_td_click_0_listener","restoredCtx","ɵɵrestoreView","item_r6","$implicit","ctx_r8","ɵɵresetView","_cellClicked","colIndex_r7","index","rowIndex_r3","ctx_r5","_cellWidth","ɵɵclassProp","enabled","_isActiveCell","ɵɵproperty","cssClasses","ariaLabel","selectedValue","value","todayValue","displayValue","MatCalendarBody_tr_1_Template","ɵɵtemplate","row_r2","ctx_r1","MatMonthView_th_3_Template","day_r1","long","narrow","_c1","MatCalendar_ng_template_0_Template","MatCalendar_mat_month_view_2_Template","_r5","MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener","$event","activeDate","MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener","ctx_r6","_dateSelected","MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener","ctx_r7","_userSelected","selected","dateFilter","maxDate","minDate","dateClass","MatCalendar_mat_year_view_3_Template","MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener","MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener","ctx_r10","_monthSelectedInYearView","MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener","ctx_r11","_goToDateInView","ctx_r2","MatCalendar_mat_multi_year_view_4_Template","_r13","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener","ctx_r12","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener","ctx_r14","_yearSelectedInMultiYearView","MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener","ctx_r15","ctx_r3","_c2","MatDatepickerToggle__svg_svg_2_Template","ɵɵnamespaceSVG","ɵɵelement","_c3","_c4","createMissingDateImplError","provider","Error","MatDatepickerIntl","constructor","changes","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","formatYearRange","start","end","ɵfac","MatDatepickerIntl_Factory","t","ɵprov","token","factory","providedIn","ngInjectableDef","ngDevMode","ɵsetClassMetadata","type","args","MatCalendarCell","MatCalendarBody","_elementRef","_ngZone","activeCell","cellAspectRatio","selectedValueChange","cell","emit","ngOnChanges","columnChanges","rows","length","rowIndex","colIndex","cellNumber","_focusActiveCell","runOutsideAngular","onStable","asObservable","pipe","subscribe","nativeElement","querySelector","focus","MatCalendarBody_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","inputs","outputs","exportAs","features","ɵɵNgOnChangesFeature","attrs","decls","vars","consts","template","MatCalendarBody_Template","dependencies","NgClass","NgForOf","NgIf","styles","encapsulation","changeDetection","ctorParameters","propDecorators","selector","host","None","OnPush","DAYS_PER_WEEK","MatMonthView","_changeDetectorRef","_dateFormats","_dateAdapter","_dir","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","_hasSameMonthAndYear","_init","_selected","_selectedDate","_getDateInCurrentMonth","_minDate","_maxDate","ngAfterContentInit","date","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","_handleCalendarBodyKeydown","event","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","preventDefault","compareDate","_todayDate","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","markForCheck","_matCalendarBody","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","map","i","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","undefined","d1","d2","obj","isDateInstance","isValid","MatMonthView_Factory","viewQuery","MatMonthView_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatMonthView_Template","MatMonthView_Template_tbody_selectedValueChange_6_listener","MatMonthView_Template_tbody_keydown_6_listener","decorators","static","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_selectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","row","year","_createCellForYear","_yearSelected","month","Math","min","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","MatMultiYearView_Factory","MatMultiYearView_Query","MatMultiYearView_Template","MatMultiYearView_Template_tbody_selectedValueChange_4_listener","MatMultiYearView_Template_tbody_keydown_4_listener","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","_selectedMonth","_getMonthInCurrentYear","_monthSelected","normalizedDate","_todayMonth","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","MatYearView_Factory","MatYearView_Query","MatYearView_Template","MatYearView_Template_tbody_selectedValueChange_4_listener","MatYearView_Template_tbody_keydown_4_listener","MatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","periodButtonText","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendarHeader_Factory","MatCalendar","ngContentSelectors","MatCalendarHeader_Template","ɵɵprojectionDef","MatCalendarHeader_Template_button_click_2_listener","ɵɵprojection","MatCalendarHeader_Template_button_click_7_listener","MatCalendarHeader_Template_button_click_8_listener","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","_intlChanges","next","startAt","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","ngAfterViewChecked","focusActiveCell","ngOnDestroy","unsubscribe","complete","change","firstChange","view","_getCurrentViewComponent","detectChanges","updateTodaysDate","monthView","yearView","multiYearView","sameDate","normalizedYear","normalizedMonth","MatCalendar_Factory","MatCalendar_Query","MatCalendar_Template","NgSwitch","NgSwitchCase","CdkMonitorFocus","CdkPortalOutlet","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MatDatepickerContentBase","_MatDatepickerContentMixinBase","MatDatepickerContent","elementRef","ngAfterViewInit","_calendar","MatDatepickerContent_Factory","MatDatepickerContent_Query","hostVars","hostBindings","MatDatepickerContent_HostBindings","ɵɵsyntheticHostProperty","datepicker","touchUi","color","ɵɵInheritDefinitionFeature","MatDatepickerContent_Template","MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener","select","MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener","_selectYear","MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener","_selectMonth","MatDatepickerContent_Template_mat_calendar__userSelection_0_listener","close","id","panelClass","_dateFilter","calendarHeaderComponent","CdkTrapFocus","data","animation","animations","MatDatepicker","_dialog","_overlay","_viewContainerRef","scrollStrategy","_document","_touchUi","openedStream","closedStream","_opened","_validSelected","_focusedElementBeforeOpen","_inputSubscription","EMPTY","_disabledChange","_selectedChanged","_scrollStrategy","_datepickerInput","_color","_getThemePalette","disabled","_disabled","newValue","opened","open","max","_popupRef","dispose","_popupComponentRef","oldValue","_registerInput","input","_valueChange","activeElement","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","direction","viewContainerRef","afterClosed","componentInstance","_setColor","_createPopup","attach","instance","updatePosition","overlayConfig","positionStrategy","_createPopupPositionStrategy","hasBackdrop","backdropClass","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","MatDatepicker_Factory","MatDatepicker_Template","MAT_DATEPICKER_VALUE_ACCESSOR","useExisting","MatDatepickerInput","multi","MAT_DATEPICKER_VALIDATORS","MatDatepickerInputEvent","target","targetElement","_formField","dateChange","dateInput","_onTouched","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","_minValidator","control","controlValue","_maxValidator","_filterValidator","_validator","compose","localeChanges","matDatepicker","_datepicker","matDatepickerFilter","_value","oldDate","_formatValue","_min","_max","element","blur","registerOnValidatorChange","fn","validate","c","getPopupConnectionElementRef","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","_onKeydown","isAltDownArrow","readOnly","_onInput","parse","_onChange","_onBlur","MatDatepickerInput_Factory","ɵdir","ɵɵdefineDirective","MatDatepickerInput_HostBindings","MatDatepickerInput_input_HostBindingHandler","MatDatepickerInput_change_HostBindingHandler","MatDatepickerInput_blur_HostBindingHandler","MatDatepickerInput_keydown_HostBindingHandler","ɵɵhostProperty","toIso8601","ɵɵProvidersFeature","providers","MatDatepickerToggleIcon","MatDatepickerToggleIcon_Factory","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","_open","stopPropagation","datepickerDisabled","inputDisabled","datepickerToggled","MatDatepickerToggle_Factory","ɵɵinjectAttribute","contentQueries","MatDatepickerToggle_ContentQueries","dirIndex","ɵɵcontentQuery","_customIcon","MatDatepickerToggle_Query","_button","MatDatepickerToggle_HostBindings","MatDatepickerToggle_focus_HostBindingHandler","disableRipple","MatDatepickerToggle_Template","MatDatepickerToggle_Template_button_click_0_listener","String","MatDatepickerModule","MatDatepickerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","entryComponents","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/dalci/OneDrive/Masaüstü/dotnet-angular-web-explorer/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/datepicker.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgModule, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, ElementRef, NgZone, InjectionToken, ViewContainerRef, Directive, Attribute, ContentChild, ɵɵdefineInjectable } from '@angular/core';\nimport { Subject, merge, Subscription, of } from 'rxjs';\nimport { take, filter } from 'rxjs/operators';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW, SPACE, ESCAPE } from '@angular/cdk/keycodes';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal, PortalModule } from '@angular/cdk/portal';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { A11yModule } from '@angular/cdk/a11y';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2)(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.label);\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = restoredCtx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ɵngcc0.ɵɵresetView(ctx_r8._cellClicked(item_r6)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5.selectedValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5.selectedValue === item_r6.value)(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.value);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r6.displayValue);\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 3, 20, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4.activeDate = $event); })(\"selectedChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r6._dateSelected($event)); })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r7._userSelected()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r8.activeDate = $event); })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r10._monthSelectedInYearView($event)); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r11._goToDateInView($event, \"month\")); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r12.activeDate = $event); })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r14._yearSelectedInMultiYearView($event)); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r15._goToDateInView($event, \"year\")); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate);\n} }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Datepicker data that requires internationalization.\n */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the calendar popup (used by screen readers).\n         */\n        this.calendarLabel = 'Calendar';\n        /**\n         * A label for the button used to open the calendar popup (used by screen readers).\n         */\n        this.openCalendarLabel = 'Open calendar';\n        /**\n         * A label for the previous month button (used by screen readers).\n         */\n        this.prevMonthLabel = 'Previous month';\n        /**\n         * A label for the next month button (used by screen readers).\n         */\n        this.nextMonthLabel = 'Next month';\n        /**\n         * A label for the previous year button (used by screen readers).\n         */\n        this.prevYearLabel = 'Previous year';\n        /**\n         * A label for the next year button (used by screen readers).\n         */\n        this.nextYearLabel = 'Next year';\n        /**\n         * A label for the previous multi-year button (used by screen readers).\n         */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /**\n         * A label for the next multi-year button (used by screen readers).\n         */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /**\n         * A label for the 'switch to month view' button (used by screen readers).\n         */\n        this.switchToMonthViewLabel = 'Choose date';\n        /**\n         * A label for the 'switch to year view' button (used by screen readers).\n         */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /**\n     * Formats a range of years.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MatDatepickerIntl, factory: MatDatepickerIntl.ɵfac, providedIn: 'root' });\n/** @nocollapse */ MatDatepickerIntl.ngInjectableDef = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nclass MatCalendarCell {\n    /**\n     * @param {?} value\n     * @param {?} displayValue\n     * @param {?} ariaLabel\n     * @param {?} enabled\n     * @param {?=} cssClasses\n     */\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nclass MatCalendarBody {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * The number of columns in the table.\n         */\n        this.numCols = 7;\n        /**\n         * The cell number of the active cell in the table.\n         */\n        this.activeCell = 0;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /**\n         * Emits when a new value is selected.\n         */\n        this.selectedValueChange = new EventEmitter();\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    _cellClicked(cell) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    _isActiveCell(rowIndex, colIndex) {\n        /** @type {?} */\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            }));\n        }));\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", cellAspectRatio: \"cellAspectRatio\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", selectedValue: \"selectedValue\", labelMinRequiredCells: \"labelMinRequiredCells\" }, outputs: { selectedValueChange: \"selectedValueChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", \"role\", \"button\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", \"role\", \"button\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    selectedValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    selectedValueChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{ selector: '[mat-calendar-body]', template: \"<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\"><td class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"numCols\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{label}}</td></tr><tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\"><td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\" aria-hidden=\\\"true\\\" class=\\\"mat-calendar-body-label\\\" [attr.colspan]=\\\"_firstRowOffset\\\" [style.paddingTop]=\\\"_cellPadding\\\" [style.paddingBottom]=\\\"_cellPadding\\\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\\\"let item of row; let colIndex = index\\\" role=\\\"gridcell\\\" class=\\\"mat-calendar-body-cell\\\" [ngClass]=\\\"item.cssClasses\\\" [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\" [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\" [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\" [attr.aria-label]=\\\"item.ariaLabel\\\" [attr.aria-disabled]=\\\"!item.enabled || null\\\" [attr.aria-selected]=\\\"selectedValue === item.value\\\" (click)=\\\"_cellClicked(item)\\\" [style.width]=\\\"_cellWidth\\\" [style.paddingTop]=\\\"_cellPadding\\\" role=\\\"button\\\" [style.paddingBottom]=\\\"_cellPadding\\\"><div class=\\\"mat-calendar-body-cell-content\\\" [class.mat-calendar-body-selected]=\\\"selectedValue === item.value\\\" [class.mat-calendar-body-today]=\\\"todayValue === item.value\\\">{{item.displayValue}}</div></td></tr>\", host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.71429%;padding-right:4.71429%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;cursor:pointer}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{position:absolute;top:5%;left:5%;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}@media (-ms-high-contrast:active){.mat-calendar-body-cell-content{border:none}}@media (-ms-high-contrast:active){.mat-calendar-body-selected,.mat-datepicker-popup:not(:empty){outline:solid 1px}.mat-calendar-body-today{outline:dotted 1px}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}}[dir=rtl] .mat-calendar-body-label{text-align:right}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], selectedValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMonthView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new date is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedDate = this._getDateInCurrentMonth(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (this._selectedDate != date) {\n            /** @type {?} */\n            const selectedYear = this._dateAdapter.getYear(this.activeDate);\n            /** @type {?} */\n            const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            /** @type {?} */\n            const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n                    this._userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        /** @type {?} */\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Initializes the weekdays.\n     * @private\n     * @return {?}\n     */\n    _initWeekdays() {\n        /** @type {?} */\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        /** @type {?} */\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        /** @type {?} */\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        /** @type {?} */\n        let weekdays = longWeekdays.map((/**\n         * @param {?} long\n         * @param {?} i\n         * @return {?}\n         */\n        (long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        }));\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @private\n     * @return {?}\n     */\n    _createWeekCells() {\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        /** @type {?} */\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            /** @type {?} */\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            /** @type {?} */\n            const enabled = this._shouldEnableDate(date);\n            /** @type {?} */\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            /** @type {?} */\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n    /**\n     * Date filter for the month\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @private\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMonthView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], decls: 7, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"selectedValue\", ctx._selectedDate)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, dependencies: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{ selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th></tr><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_monthLabel\\\" [rows]=\\\"_weeks\\\" [todayValue]=\\\"_todayDate\\\" [selectedValue]=\\\"_selectedDate\\\" [labelMinRequiredCells]=\\\"3\\\" [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\" (selectedValueChange)=\\\"_dateSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst yearsPerPage = 24;\n/** @type {?} */\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatMultiYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new year is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected year. This doesn't imply a change on the selected date\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this multi-year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Initializes this multi-year view.\n     * @return {?}\n     */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map((/**\n                 * @param {?} year\n                 * @return {?}\n                 */\n                year => this._createCellForYear(year))));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Handles when a new year is selected.\n     * @param {?} year\n     * @return {?}\n     */\n    _yearSelected(year) {\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        /** @type {?} */\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        /** @type {?} */\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in multi-year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Creates an MatCalendarCell for the given year.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _createCellForYear(year) {\n        /** @type {?} */\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n    }\n    /**\n     * Whether the given year is enabled.\n     * @private\n     * @param {?} year\n     * @return {?}\n     */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 6, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"selectedValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"selectedValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, dependencies: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [rows]=\\\"_years\\\" [todayValue]=\\\"_todayYear\\\" [selectedValue]=\\\"_selectedYear\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_getActiveCell()\\\" (selectedValueChange)=\\\"_yearSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] }); })();\n/**\n * @template D\n * @param {?} dateAdapter\n * @param {?} date1\n * @param {?} date2\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    /** @type {?} */\n    const year1 = dateAdapter.getYear(date1);\n    /** @type {?} */\n    const year2 = dateAdapter.getYear(date2);\n    /** @type {?} */\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n * @template D\n * @param {?} dateAdapter\n * @param {?} activeDate\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    /** @type {?} */\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n * @template D\n * @param {?} dateAdapter\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    /** @type {?} */\n    let startingYear = 0;\n    if (maxDate) {\n        /** @type {?} */\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/**\n * Gets remainder that is non-negative, even if first number is negative\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatYearView {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _dateFormats\n     * @param {?} _dateAdapter\n     * @param {?=} _dir\n     */\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        /**\n         * Emits when a new month is selected.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the selected month. This doesn't imply a change on the selected date\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is activated.\n         */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this year view (everything other than the year is ignored).\n     * @return {?}\n     */\n    get activeDate() { return this._activeDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        /** @type {?} */\n        let oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._init();\n    }\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    _monthSelected(month) {\n        /** @type {?} */\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        /** @type {?} */\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        /** @type {?} */\n        const oldActiveDate = this._activeDate;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /**\n     * Initializes this year view.\n     * @return {?}\n     */\n    _init() {\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        /** @type {?} */\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((/**\n         * @param {?} row\n         * @return {?}\n         */\n        row => row.map((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => this._createCellForMonth(month, monthNames[month])))));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @private\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    _createCellForMonth(month, monthName) {\n        /** @type {?} */\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n    }\n    /**\n     * Whether the given month is enabled.\n     * @private\n     * @param {?} month\n     * @return {?}\n     */\n    _shouldEnableMonth(month) {\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        /** @type {?} */\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            /** @type {?} */\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            /** @type {?} */\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @return {?}\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            /** @type {?} */\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            /** @type {?} */\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Determines whether the user has the RTL layout direction.\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 8, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"selectedValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\", 1)(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"selectedValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, dependencies: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{ selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\"><thead class=\\\"mat-calendar-table-header\\\"><tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr></thead><tbody mat-calendar-body [label]=\\\"_yearLabel\\\" [rows]=\\\"_months\\\" [todayValue]=\\\"_todayMonth\\\" [selectedValue]=\\\"_selectedMonth\\\" [labelMinRequiredCells]=\\\"2\\\" [numCols]=\\\"4\\\" [cellAspectRatio]=\\\"4 / 7\\\" [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\" (selectedValueChange)=\\\"_monthSelected($event)\\\" (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\"></tbody></table>\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody, { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default header for MatCalendar\n * @template D\n */\nclass MatCalendarHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} calendar\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this.calendar.stateChanges.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * The label for the current calendar view.\n     * @return {?}\n     */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        /** @type {?} */\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        /** @type {?} */\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        /** @type {?} */\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        /** @type {?} */\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        /** @type {?} */\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    /**\n     * @return {?}\n     */\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /**\n     * The label for the previous button.\n     * @return {?}\n     */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * The label for the next button.\n     * @return {?}\n     */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @private\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatCalendar))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 9, vars: 8, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelement(4, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵprojection(6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_7_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView != \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, dependencies: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatCalendar)),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\"><div class=\\\"mat-calendar-controls\\\"><button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\" (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\" cdkAriaLive=\\\"polite\\\">{{periodButtonText}}<div class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div></button><div class=\\\"mat-calendar-spacer\\\"></div><ng-content></ng-content><button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\" [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\" [attr.aria-label]=\\\"prevButtonLabel\\\"></button> <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\" [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\" [attr.aria-label]=\\\"nextButtonLabel\\\"></button></div></div>\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatCalendar))]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n * @template D\n */\nclass MatCalendar {\n    /**\n     * @param {?} _intl\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _changeDetectorRef\n     */\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /**\n         * Whether the calendar should be started in month or year view.\n         */\n        this.startView = 'month';\n        /**\n         * Emits when the currently selected date changes.\n         */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when any date is selected.\n         */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * A date representing the period (month or year) to start the calendar in.\n     * @return {?}\n     */\n    get startAt() { return this._startAt; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get minDate() { return this._minDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minDate(value) {\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get maxDate() { return this._maxDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxDate(value) {\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     * @return {?}\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the calendar is in month view.\n     * @return {?}\n     */\n    get currentView() { return this._currentView; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set currentView(value) {\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            /** @type {?} */\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell();\n    }\n    /**\n     * Updates today's date after an update of the active date\n     * @return {?}\n     */\n    updateTodaysDate() {\n        /** @type {?} */\n        let view = this.currentView == 'month' ? this.monthView :\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\n        view.ngAfterContentInit();\n    }\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    _dateSelected(date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n    /**\n     * Handles year selection in the multiyear view.\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Handles month selection in the year view.\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * @return {?}\n     */\n    _userSelected() {\n        this._userSelection.emit();\n    }\n    /**\n     * Handles year/month selection in the multi-year/year views.\n     * @param {?} date\n     * @param {?} view\n     * @return {?}\n     */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Returns the component instance that corresponds to the current calendar view.\n     * @private\n     * @return {?}\n     */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 5);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 5);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"selectedChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 6, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 5, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 5, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, dependencies: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc5.CdkMonitorFocus, ɵngcc6.CdkPortalOutlet, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView, { static: false },] }],\n    yearView: [{ type: ViewChild, args: [MatYearView, { static: false },] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{ selector: 'mat-calendar', template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template><div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\"><mat-month-view *ngSwitchCase=\\\"'month'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" [dateClass]=\\\"dateClass\\\" (selectedChange)=\\\"_dateSelected($event)\\\" (_userSelection)=\\\"_userSelected()\\\"></mat-month-view><mat-year-view *ngSwitchCase=\\\"'year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (monthSelected)=\\\"_monthSelectedInYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'month')\\\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\\\"'multi-year'\\\" [(activeDate)]=\\\"activeDate\\\" [selected]=\\\"selected\\\" [dateFilter]=\\\"dateFilter\\\" [maxDate]=\\\"maxDate\\\" [minDate]=\\\"minDate\\\" (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\" (selectedChange)=\\\"_goToDateInView($event, 'year')\\\"></mat-multi-year-view></div>\", host: {\n                    'class': 'mat-calendar'\n                }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:0}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-next-button,.mat-calendar-previous-button{position:relative}.mat-calendar-next-button::after,.mat-calendar-previous-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:'';margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-next-button,[dir=rtl] .mat-calendar-previous-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:'';position:absolute;top:0;left:-8px;right:-8px;height:1px}\"] }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView, { static: false }]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView, { static: false }]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView, { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material datepicker.\n * \\@docs-private\n * @type {?}\n */\nconst matDatepickerAnimations = {\n    /**\n     * Transforms the height of the datepicker's calendar.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * Fades in the content of the calendar.\n     */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate a unique ID for each datepicker instance.\n * @type {?}\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/**\n * \\@docs-private\n */\nclass MatDatepickerContentBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n * @template D\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super(elementRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._calendar.focusActiveCell();\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatDatepickerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", \"enter\");\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 11, consts: [[\"cdkTrapFocus\", \"\", 3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-calendar\", 0);\n        ɵngcc0.ɵɵlistener(\"selectedChange\", function MatDatepickerContent_Template_mat_calendar_selectedChange_0_listener($event) { return ctx.datepicker.select($event); })(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) { return ctx.datepicker._selectMonth($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._minDate)(\"maxDate\", ctx.datepicker._maxDate)(\"dateFilter\", ctx.datepicker._dateFilter)(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx.datepicker._selected)(\"dateClass\", ctx.datepicker.dateClass)(\"@fadeInCalendar\", \"enter\");\n    } }, dependencies: [ɵngcc1.NgClass, ɵngcc5.CdkTrapFocus, MatCalendar], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-content', template: \"<mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\" [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\" [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\" [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\" (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\" (monthSelected)=\\\"datepicker._selectMonth($event)\\\" (_userSelection)=\\\"datepicker.close()\\\"></mat-calendar>\", host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '\"enter\"',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                }, animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation:landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation:portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar, { static: false }]\n        }] }); })();\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/**\n * Component responsible for managing the datepicker popup/dialog.\n * @template D\n */\nclass MatDatepicker {\n    /**\n     * @param {?} _dialog\n     * @param {?} _overlay\n     * @param {?} _ngZone\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _dateAdapter\n     * @param {?} _dir\n     * @param {?} _document\n     */\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        /**\n         * The view that the calendar should start in.\n         */\n        this.startView = 'month';\n        this._touchUi = false;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the datepicker has been opened.\n         */\n        this.openedStream = new EventEmitter();\n        /**\n         * Emits when the datepicker has been closed.\n         */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /**\n         * The id for the datepicker calendar.\n         */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        this._validSelected = null;\n        /**\n         * The element that was focused before the datepicker was opened.\n         */\n        this._focusedElementBeforeOpen = null;\n        /**\n         * Subscription to value changes in the associated input element.\n         */\n        this._inputSubscription = Subscription.EMPTY;\n        /**\n         * Emits when the datepicker is disabled.\n         */\n        this._disabledChange = new Subject();\n        /**\n         * Emits new selected date when selected date changes.\n         */\n        this._selectedChanged = new Subject();\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * The date to open the calendar to initially.\n     * @return {?}\n     */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set startAt(value) {\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * Color palette to use on the datepicker's calendar.\n     * @return {?}\n     */\n    get color() {\n        return this._color ||\n            (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     * @return {?}\n     */\n    get touchUi() { return this._touchUi; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the datepicker pop-up should be disabled.\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled === undefined && this._datepickerInput ?\n            this._datepickerInput.disabled : !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._disabledChange.next(newValue);\n        }\n    }\n    /**\n     * Whether the calendar is open.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { value ? this.open() : this.close(); }\n    /**\n     * The currently selected date.\n     * @return {?}\n     */\n    get _selected() { return this._validSelected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _selected(value) { this._validSelected = value; }\n    /**\n     * The minimum selectable date.\n     * @return {?}\n     */\n    get _minDate() {\n        return this._datepickerInput && this._datepickerInput.min;\n    }\n    /**\n     * The maximum selectable date.\n     * @return {?}\n     */\n    get _maxDate() {\n        return this._datepickerInput && this._datepickerInput.max;\n    }\n    /**\n     * @return {?}\n     */\n    get _dateFilter() {\n        return this._datepickerInput && this._datepickerInput._dateFilter;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupComponentRef = null;\n        }\n    }\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    select(date) {\n        /** @type {?} */\n        let oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this._selectedChanged.next(date);\n        }\n    }\n    /**\n     * Emits the selected year in multiyear view\n     * @param {?} normalizedYear\n     * @return {?}\n     */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /**\n     * Emits selected month in year view\n     * @param {?} normalizedMonth\n     * @return {?}\n     */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    _registerInput(input) {\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this._selected = value));\n    }\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        /** @type {?} */\n        const completeClose = (/**\n         * @return {?}\n         */\n        () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        });\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /**\n     * Open the calendar as a dialog.\n     * @private\n     * @return {?}\n     */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this.close()));\n        this._dialogRef.componentInstance.datepicker = this;\n        this._setColor();\n    }\n    /**\n     * Open the calendar as a popup.\n     * @private\n     * @return {?}\n     */\n    _openAsPopup() {\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\n            this._popupComponentRef.instance.datepicker = this;\n            this._setColor();\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._popupRef.updatePosition();\n            }));\n        }\n    }\n    /**\n     * Create the popup.\n     * @private\n     * @return {?}\n     */\n    _createPopup() {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return event.keyCode === ESCAPE ||\n                (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n        })))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        }));\n    }\n    /**\n     * Create the popup PositionStrategy.\n     * @private\n     * @return {?}\n     */\n    _createPopupPositionStrategy() {\n        return this._overlay.position()\n            .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom'\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top'\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom'\n            }\n        ]);\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n    /**\n     * Passes the current theme color along to the calendar overlay.\n     * @private\n     * @return {?}\n     */\n    _setColor() {\n        /** @type {?} */\n        const color = this.color;\n        if (this._popupComponentRef) {\n            this._popupComponentRef.instance.color = color;\n        }\n        if (this._dialogRef) {\n            this._dialogRef.componentInstance.color = color;\n        }\n    }\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return new (t || MatDatepicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDatepicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], inputs: { startView: \"startView\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", panelClass: \"panelClass\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, exportAs: [\"matDatepicker\"], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepicker.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDatepicker.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    panelClass: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { startView: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatDatepickerInput)),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n * @template D\n */\nclass MatDatepickerInputEvent {\n    /**\n     * @param {?} target\n     * @param {?} targetElement\n     */\n    constructor(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/**\n * Directive used to connect an input to a MatDatepicker.\n * @template D\n */\nclass MatDatepickerInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dateAdapter\n     * @param {?} _dateFormats\n     * @param {?} _formField\n     */\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        /**\n         * Emits when a `change` event is fired on this `<input>`.\n         */\n        this.dateChange = new EventEmitter();\n        /**\n         * Emits when an `input` event is fired on this `<input>`.\n         */\n        this.dateInput = new EventEmitter();\n        /**\n         * Emits when the value changes (either due to user input or programmatic change).\n         */\n        this._valueChange = new EventEmitter();\n        /**\n         * Emits when the disabled state has changed\n         */\n        this._disabledChange = new EventEmitter();\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._cvaOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorOnChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._datepickerSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /**\n         * The form control validator for whether the input parses.\n         */\n        this._parseValidator = (/**\n         * @return {?}\n         */\n        () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        });\n        /**\n         * The form control validator for the min date.\n         */\n        this._minValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.min || !controlValue ||\n                this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': this.min, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the max date.\n         */\n        this._maxValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return (!this.max || !controlValue ||\n                this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': this.max, 'actual': controlValue } };\n        });\n        /**\n         * The form control validator for the date filter.\n         */\n        this._filterValidator = (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        });\n        /**\n         * The combined form control validator for this input.\n         */\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n        /**\n         * Whether the last value set on the input was valid.\n         */\n        this._lastValueValid = false;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.value = this.value;\n        }));\n    }\n    /**\n     * The datepicker that this input is associated with.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepicker(value) {\n        if (!value) {\n            return;\n        }\n        this._datepicker = value;\n        this._datepicker._registerInput(this);\n        this._datepickerSubscription.unsubscribe();\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((/**\n         * @param {?} selected\n         * @return {?}\n         */\n        (selected) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }));\n    }\n    /**\n     * Function that can be used to filter out dates within the datepicker.\n     * @param {?} value\n     * @return {?}\n     */\n    set matDatepickerFilter(value) {\n        this._dateFilter = value;\n        this._validatorOnChange();\n    }\n    /**\n     * The value of the input.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\n        value = this._getValidDateOrNull(value);\n        /** @type {?} */\n        const oldDate = this.value;\n        this._value = value;\n        this._formatValue(value);\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\n            this._valueChange.emit(value);\n        }\n    }\n    /**\n     * The minimum valid date.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set min(value) {\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * The maximum valid date.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set max(value) {\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        this._validatorOnChange();\n    }\n    /**\n     * Whether the datepicker-input is disabled.\n     * @return {?}\n     */\n    get disabled() { return !!this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this._disabledChange.emit(newValue);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     * @return {?}\n     */\n    getPopupConnectionElementRef() {\n        return this.getConnectedOverlayOrigin();\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _onInput(value) {\n        /** @type {?} */\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this._cvaOnChange(date);\n            this._valueChange.emit(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /**\n     * Returns the palette used by the input's form field, if any.\n     * @return {?}\n     */\n    _getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /**\n     * Handles blur events on the input.\n     * @return {?}\n     */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /**\n     * Formats a value and sets it on the input element.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /**\n     * @private\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    _getValidDateOrNull(obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc9.MatFormField, 8)); };\nMatDatepickerInput.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostVars: 5, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null);\n    } }, inputs: { value: \"value\", matDatepicker: \"matDatepicker\", matDatepickerFilter: \"matDatepickerFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ])] });\n/** @nocollapse */\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    matDatepickerFilter: [{ type: Input }],\n    value: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], matDatepicker: [{\n            type: Input\n        }], matDatepickerFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Can be used to override the icon of a `matDatepickerToggle`.\n */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\n/**\n * @template D\n */\nclass MatDatepickerToggle {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?} defaultTabIndex\n     */\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        /** @type {?} */\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /**\n     * Whether the toggle button is disabled.\n     * @return {?}\n     */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _watchStateChanges() {\n        /** @type {?} */\n        const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        /** @type {?} */\n        const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        /** @type {?} */\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled, datepickerToggled).subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 7, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerToggle_focus_HostBindingHandler() { return ctx._button.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\", \"click\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_Template_button_click_0_listener($event) { return ctx._open($event); });\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, dependencies: [ɵngcc1.NgIf, ɵngcc4.MatButton], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon, { static: false },] }],\n    _button: [{ type: ViewChild, args: ['button', { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{ selector: 'mat-datepicker-toggle', template: \"<button #button mat-icon-button type=\\\"button\\\" [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\" [attr.aria-label]=\\\"_intl.openCalendarLabel\\\" [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\" [disabled]=\\\"disabled\\\" [disableRipple]=\\\"disableRipple\\\" (click)=\\\"_open($event)\\\"><svg *ngIf=\\\"!_customIcon\\\" class=\\\"mat-datepicker-toggle-default-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" fill=\\\"currentColor\\\" focusable=\\\"false\\\"><path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/></svg><ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content></button>\", host: {\n                    'class': 'mat-datepicker-toggle',\n                    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n                    // consumer may have provided, while still being able to receive focus.\n                    '[attr.tabindex]': '-1',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    '(focus)': '_button.focus()'\n                }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\"] }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon, { static: false }]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button', { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n    ], imports: [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                ],\n                exports: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule]; }, exports: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMultiYearView, yearsPerPage, yearsPerRow, MatDatepickerModule, MatCalendarHeader, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MatDatepickerContent, MatDatepicker, matDatepickerAnimations, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggleIcon, MatDatepickerToggle, MatMonthView, MatYearView };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
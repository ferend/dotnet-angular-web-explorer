{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ApplicationRef, ChangeDetectorRef, ComponentFactoryResolver, Directive, Inject, Injector, TemplateRef, ViewContainerRef, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, Input, HostListener, ContentChild, ContentChildren, EventEmitter, NgZone, Output, QueryList, ViewChild, Self, NgModule } from '@angular/core';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW, HOME, END, hasModifierKey } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4._onAnimationStart($event));\n    })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n  }\n}\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', group([query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n    opacity: 1\n  }))), animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    transform: 'scale(1)'\n  }))])), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n  // TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n  /**\n   * @param {?} _template\n   * @param {?} _componentFactoryResolver\n   * @param {?} _appRef\n   * @param {?} _injector\n   * @param {?} _viewContainerRef\n   * @param {?} _document\n   * @param {?=} _changeDetectorRef\n   */\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /**\n     * Emits when the menu content has been attached.\n     */\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * \\@docs-private\n   * @param {?=} context\n   * @return {?}\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    /** @type {?} */\n    const element = this._template.elementRef.nativeElement;\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    /** @type {?} */element.parentNode.insertBefore(this._outlet.outletElement, element);\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * \\@docs-private\n   * @return {?}\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) {\n  return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nMatMenuContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuContent,\n  selectors: [[\"ng-template\", \"matMenuContent\", \"\"]]\n});\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?=} document\n   * @param {?=} _focusMonitor\n   * @param {?=} _parentMenu\n   */\n  constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    /**\n     * ARIA role for the menu item.\n     */\n    this.role = 'menuitem';\n    /**\n     * Stream that emits when the menu item is hovered.\n     */\n    this._hovered = new Subject();\n    /**\n     * Whether the menu item is highlighted.\n     */\n    this._highlighted = false;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     */\n    this._triggersSubmenu = false;\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._elementRef, false);\n    }\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n    this._document = document;\n  }\n  /**\n   * Focuses the menu item.\n   * @param {?=} origin\n   * @param {?=} options\n   * @return {?}\n   */\n  focus(origin = 'program', options) {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n  }\n  /**\n   * Used to set the `tabindex`.\n   * @return {?}\n   */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Returns the host DOM element.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /**\n   * Prevents the default element actions if it is disabled.\n   * @param {?} event\n   * @return {?}\n   */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Emits to the hover stream.\n   * @return {?}\n   */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n  getLabel() {\n    /** @type {?} */\n    const element = this._elementRef.nativeElement;\n    /** @type {?} */\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    /** @type {?} */\n    let output = '';\n    if (element.childNodes) {\n      /** @type {?} */\n      const length = element.childNodes.length;\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n    return output.trim();\n  }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) {\n  return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8));\n};\nMatMenuItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenuItem,\n  selectors: [[\"\", \"mat-menu-item\", \"\"]],\n  hostAttrs: [1, \"mat-menu-item\"],\n  hostVars: 8,\n  hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n        return ctx._checkDisabled($event);\n      })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n        return ctx._handleMouseEnter();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    role: \"role\"\n  },\n  exportAs: [\"matMenuItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]],\n  template: function MatMenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  dependencies: [ɵngcc2.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_PANEL]\n  }, {\n    type: Optional\n  }]\n}];\nMatMenuItem.propDecorators = {\n  role: [{\n    type: Input\n  }],\n  _checkDisabled: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  _handleMouseEnter: [{\n    type: HostListener,\n    args: ['mouseenter']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        '[attr.role]': 'role',\n        'class': 'mat-menu-item',\n        '[class.mat-menu-item-highlighted]': '_highlighted',\n        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _defaultOptions\n   */\n  constructor(_elementRef, _ngZone, _defaultOptions) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    this._xPosition = this._defaultOptions.xPosition;\n    this._yPosition = this._defaultOptions.yPosition;\n    /**\n     * Only the direct descendant menu items.\n     */\n    this._directDescendantItems = new QueryList();\n    /**\n     * Subscription to tab events on the menu panel\n     */\n    this._tabSubscription = Subscription.EMPTY;\n    /**\n     * Config object to be passed into the menu's ngClass\n     */\n    this._classList = {};\n    /**\n     * Current state of the panel animation.\n     */\n    this._panelAnimationState = 'void';\n    /**\n     * Emits whenever an animation on the menu completes.\n     */\n    this._animationDone = new Subject();\n    /**\n     * Class to be added to the backdrop element.\n     */\n    this.backdropClass = this._defaultOptions.backdropClass;\n    this._overlapTrigger = this._defaultOptions.overlapTrigger;\n    this._hasBackdrop = this._defaultOptions.hasBackdrop;\n    /**\n     * Event emitted when the menu is closed.\n     */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     */\n    this.close = this.closed;\n  }\n  /**\n   * Position of the menu in the X axis.\n   * @return {?}\n   */\n  get xPosition() {\n    return this._xPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Position of the menu in the Y axis.\n   * @return {?}\n   */\n  get yPosition() {\n    return this._yPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Whether the menu should overlap its trigger.\n   * @return {?}\n   */\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the menu has a backdrop.\n   * @return {?}\n   */\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param {?} classes list of class names\n   * @return {?}\n   */\n  set panelClass(classes) {\n    /** @type {?} */\n    const previousPanelClass = this._previousPanelClass;\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach(\n      /**\n      * @param {?} className\n      * @return {?}\n      */\n      className => {\n        this._classList[className] = false;\n      });\n    }\n    this._previousPanelClass = classes;\n    if (classes && classes.length) {\n      classes.split(' ').forEach(\n      /**\n      * @param {?} className\n      * @return {?}\n      */\n      className => {\n        this._classList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n  get classList() {\n    return this.panelClass;\n  }\n  /**\n   * @param {?} classes\n   * @return {?}\n   */\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(\n    /**\n    * @return {?}\n    */\n    () => this.closed.emit('tab'));\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._directDescendantItems.destroy();\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n  /**\n   * Stream that emits whenever the hovered menu item changes.\n   * @return {?}\n   */\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    /** @type {?} */\n    const itemChanges = /** @type {?} */this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(\n    /**\n    * @param {?} items\n    * @return {?}\n    */\n    items => merge(...items.map(\n    /**\n    * @param {?} item\n    * @return {?}\n    */\n    item => item._hovered))));\n  }\n  /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n  /**\n   * @param {?} _item\n   * @return {?}\n   */\n  addItem(_item) {}\n  /**\n   * Removes an item from the menu.\n   * \\@docs-private\n   * @deprecated No longer being used. To be removed.\n   * \\@breaking-change 9.0.0\n   * @param {?} _item\n   * @return {?}\n   */\n  removeItem(_item) {}\n  /**\n   * Handle a keyboard event from the menu, delegating to the appropriate action.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    /** @type {?} */\n    const manager = this._keyManager;\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case HOME:\n      case END:\n        if (!hasModifierKey(event)) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n        manager.onKeydown(event);\n    }\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n   * @return {?}\n   */\n  focusFirstItem(origin = 'program') {\n    /** @type {?} */\n    const manager = this._keyManager;\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => manager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      manager.setFocusOrigin(origin).setFirstItemActive();\n    }\n    // If there's no active item at this point, it means that all the items are disabled.\n    // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n    // give _some_ feedback to screen readers.\n    if (!manager.activeItem && this._directDescendantItems.length) {\n      /** @type {?} */\n      let element = this._directDescendantItems.first._getHostElement().parentElement;\n      // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n      // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n      // because the panel is inside an `ng-template`. We work around it by starting from one of\n      // the items and walking up the DOM.\n      while (element) {\n        if (element.getAttribute('role') === 'menu') {\n          element.focus();\n          break;\n        } else {\n          element = element.parentElement;\n        }\n      }\n    }\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   * @return {?}\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * Sets the menu panel elevation.\n   * @param {?} depth Number of parent menus that come before the menu.\n   * @return {?}\n   */\n  setElevation(depth) {\n    // The elevation starts at the base and increases by one for each level.\n    /** @type {?} */\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    /** @type {?} */\n    const customElevation = Object.keys(this._classList).find(\n    /**\n    * @param {?} c\n    * @return {?}\n    */\n    c => c.startsWith('mat-elevation-z'));\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * \\@docs-private\n   * @param {?=} posX Position of the menu along the x axis.\n   * @param {?=} posY Position of the menu along the y axis.\n   * @return {?}\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    /** @type {?} */\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n  /**\n   * Starts the enter animation.\n   * @return {?}\n   */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n  /**\n   * Resets the panel animation to its initial state.\n   * @return {?}\n   */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n  /**\n   * Callback that is invoked when the panel animation completes.\n   * @param {?} event\n   * @return {?}\n   */\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onAnimationStart(event) {\n    this._isAnimating = true;\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   * @private\n   * @return {?}\n   */\n  _updateDirectDescendants() {\n    this._allItems.changes.pipe(startWith(this._allItems)).subscribe(\n    /**\n    * @param {?} items\n    * @return {?}\n    */\n    items => {\n      this._directDescendantItems.reset(items.filter(\n      /**\n      * @param {?} item\n      * @return {?}\n      */\n      item => item._parentMenu === this));\n      this._directDescendantItems.notifyOnChanges();\n    });\n  }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) {\n  return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n_MatMenuBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatMenuBase,\n  contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function _MatMenuBase_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    overlapTrigger: \"overlapTrigger\",\n    hasBackdrop: \"hasBackdrop\",\n    panelClass: [\"class\", \"panelClass\"],\n    classList: \"classList\"\n  },\n  outputs: {\n    closed: \"closed\",\n    close: \"close\"\n  }\n});\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\n_MatMenuBase.propDecorators = {\n  _allItems: [{\n    type: ContentChildren,\n    args: [MatMenuItem, {\n      descendants: true\n    }]\n  }],\n  backdropClass: [{\n    type: Input\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: false\n    }]\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [MatMenuItem]\n  }],\n  lazyContent: [{\n    type: ContentChild,\n    args: [MatMenuContent, {\n      static: false\n    }]\n  }],\n  overlapTrigger: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  panelClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  classList: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }]\n};\n\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {}\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n  /**\n   * @param {?} elementRef\n   * @param {?} ngZone\n   * @param {?} defaultOptions\n   */\n  constructor(elementRef, ngZone, defaultOptions) {\n    super(elementRef, ngZone, defaultOptions);\n  }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) {\n  return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n_MatMenu.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: _MatMenu,\n  selectors: [[\"mat-menu\"]],\n  exportAs: [\"matMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_PANEL,\n    useExisting: MatMenu\n  }, {\n    provide: MatMenu,\n    useExisting: _MatMenu\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n  template: function _MatMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    }\n  },\n  dependencies: [ɵngcc3.NgClass],\n  styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_onAnimationStart($event)\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }, {\n        provide: MatMenu,\n        useExisting: _MatMenu\n      }],\n      styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return (\n    /**\n    * @return {?}\n    */\n    () => overlay.scrollStrategies.reposition()\n  );\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n  /**\n   * @param {?} _overlay\n   * @param {?} _element\n   * @param {?} _viewContainerRef\n   * @param {?} scrollStrategy\n   * @param {?} _parentMenu\n   * @param {?} _menuItemInstance\n   * @param {?} _dir\n   * @param {?=} _focusMonitor\n   */\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._parentMenu = _parentMenu;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    this._handleTouchStart =\n    /**\n    * @return {?}\n    */\n    () => this._openedBy = 'touch';\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    this._openedBy = null;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    this.restoreFocus = true;\n    /**\n     * Event emitted when the associated menu is opened.\n     */\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuOpen = this.menuOpened;\n    /**\n     * Event emitted when the associated menu is closed.\n     */\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onMenuClose = this.menuClosed;\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n    this._scrollStrategy = scrollStrategy;\n  }\n  /**\n   * @deprecated\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /**\n   * References the menu instance that the trigger is associated with.\n   * @return {?}\n   */\n  get menu() {\n    return this._menu;\n  }\n  /**\n   * @param {?} menu\n   * @return {?}\n   */\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n    if (menu) {\n      this._menuCloseSubscription = menu.close.asObservable().subscribe(\n      /**\n      * @param {?} reason\n      * @return {?}\n      */\n      reason => {\n        this._destroyMenu();\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n          this._parentMenu.closed.emit(reason);\n        }\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._checkMenu();\n    this._handleHover();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n  /**\n   * Whether the menu is open.\n   * @return {?}\n   */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /**\n   * The text direction of the containing app.\n   * @return {?}\n   */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Whether the menu triggers a sub-menu or a top-level one.\n   * @return {?}\n   */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n  /**\n   * Toggles the menu between the open and closed states.\n   * @return {?}\n   */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /**\n   * Opens the menu.\n   * @return {?}\n   */\n  openMenu() {\n    if (this._menuOpen) {\n      return;\n    }\n    this._checkMenu();\n    /** @type {?} */\n    const overlayRef = this._createOverlay();\n    /** @type {?} */\n    const overlayConfig = overlayRef.getConfig();\n    this._setPosition( /** @type {?} */overlayConfig.positionStrategy);\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n    overlayRef.attach(this._getPortal());\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(\n    /**\n    * @return {?}\n    */\n    () => this.closeMenu());\n    this._initMenu();\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n  /**\n   * Closes the menu.\n   * @return {?}\n   */\n  closeMenu() {\n    this.menu.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param {?=} origin Source of the menu trigger's focus.\n   * @param {?=} options\n   * @return {?}\n   */\n  focus(origin = 'program', options) {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  /**\n   * Closes the menu and does the necessary cleanup.\n   * @private\n   * @return {?}\n   */\n  _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    /** @type {?} */\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(\n        /**\n        * @param {?} event\n        * @return {?}\n        */\n        event => event.toState === 'void'), take(1),\n        // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe({\n          next:\n          /**\n          * @return {?}\n          */\n          () => /** @type {?} */menu.lazyContent.detach(),\n          // No matter whether the content got re-attached, reset the menu.\n          complete:\n          /**\n          * @return {?}\n          */\n          () => this._setIsMenuOpen(false)\n        });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n    this._restoreFocus();\n  }\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   * @private\n   * @return {?}\n   */\n  _initMenu() {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n  /**\n   * Updates the menu elevation based on the amount of parent menus that it has.\n   * @private\n   * @return {?}\n   */\n  _setMenuElevation() {\n    if (this.menu.setElevation) {\n      /** @type {?} */\n      let depth = 0;\n      /** @type {?} */\n      let parentMenu = this.menu.parentMenu;\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n      this.menu.setElevation(depth);\n    }\n  }\n  /**\n   * Restores focus to the element that was focused before the menu was open.\n   * @private\n   * @return {?}\n   */\n  _restoreFocus() {\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (this.restoreFocus) {\n      if (!this._openedBy) {\n        // Note that the focus style will show up both for `program` and\n        // `keyboard` so we don't have to specify which one it is.\n        this.focus();\n      } else if (!this.triggersSubmenu()) {\n        this.focus(this._openedBy);\n      }\n    }\n    this._openedBy = null;\n  }\n  // set state rather than toggle to support triggers sharing a menu\n  /**\n   * @private\n   * @param {?} isOpen\n   * @return {?}\n   */\n  _setIsMenuOpen(isOpen) {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   * @private\n   * @return {?}\n   */\n  _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   * @private\n   * @return {?}\n   */\n  _createOverlay() {\n    if (!this._overlayRef) {\n      /** @type {?} */\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @private\n   * @return {?} OverlayConfig\n   */\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   * @private\n   * @param {?} position\n   * @return {?}\n   */\n  _subscribeToPositions(position) {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => {\n        /** @type {?} */\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        /** @type {?} */\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        /** @type {?} */this.menu.setPositionClasses(posX, posY);\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @private\n   * @param {?} positionStrategy Strategy whose position to update.\n   * @return {?}\n   */\n  _setPosition(positionStrategy) {\n    let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    /** @type {?} */\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /**\n   * Returns a stream that emits whenever an action that should close the menu occurs.\n   * @private\n   * @return {?}\n   */\n  _menuClosingActions() {\n    /** @type {?} */\n    const backdrop = /** @type {?} */this._overlayRef.backdropClick();\n    /** @type {?} */\n    const detachments = /** @type {?} */this._overlayRef.detachments();\n    /** @type {?} */\n    const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n    /** @type {?} */\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(\n    /**\n    * @param {?} active\n    * @return {?}\n    */\n    active => active !== this._menuItemInstance), filter(\n    /**\n    * @return {?}\n    */\n    () => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /**\n   * Handles mouse presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /**\n   * Handles key presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this.openMenu();\n    }\n  }\n  /**\n   * Handles click events on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /**\n   * Handles the cases where the user hovers over the trigger.\n   * @private\n   * @return {?}\n   */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n    this._hoverSubscription = this._parentMenu._hovered()\n    // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(\n    /**\n    * @param {?} active\n    * @return {?}\n    */\n    active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._openedBy = 'mouse';\n      // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n      if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered())).subscribe(\n        /**\n        * @return {?}\n        */\n        () => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n  /**\n   * Gets the portal that should be attached to the overlay.\n   * @private\n   * @return {?}\n   */\n  _getPortal() {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n    }\n    return this._portal;\n  }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) {\n  return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\nMatMenuTrigger.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuTrigger,\n  selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"],\n  hostVars: 1,\n  hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n        return ctx._handleMousedown($event);\n      })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    }\n  },\n  inputs: {\n    restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"],\n    _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n    menu: [\"matMenuTriggerFor\", \"menu\"],\n    menuData: [\"matMenuTriggerData\", \"menuData\"]\n  },\n  outputs: {\n    menuOpened: \"menuOpened\",\n    onMenuOpen: \"onMenuOpen\",\n    menuClosed: \"menuClosed\",\n    onMenuClose: \"onMenuClose\"\n  },\n  exportAs: [\"matMenuTrigger\"]\n});\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [{\n  type: Overlay\n}, {\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_SCROLL_STRATEGY]\n  }]\n}, {\n  type: MatMenu,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: MatMenuItem,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: FocusMonitor\n}];\nMatMenuTrigger.propDecorators = {\n  _deprecatedMatMenuTriggerFor: [{\n    type: Input,\n    args: ['mat-menu-trigger-for']\n  }],\n  menu: [{\n    type: Input,\n    args: ['matMenuTriggerFor']\n  }],\n  menuData: [{\n    type: Input,\n    args: ['matMenuTriggerData']\n  }],\n  restoreFocus: [{\n    type: Input,\n    args: ['matMenuTriggerRestoreFocus']\n  }],\n  menuOpened: [{\n    type: Output\n  }],\n  onMenuOpen: [{\n    type: Output\n  }],\n  menuClosed: [{\n    type: Output\n  }],\n  onMenuClose: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-menu-trigger',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'menuOpen || null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: MatMenu,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }],\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) {\n  return new (t || _MatMenuDirectivesModule)();\n};\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: _MatMenuDirectivesModule\n});\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n      declarations: [MatMenuTrigger, MatMenuContent],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, {\n    declarations: function () {\n      return [MatMenuTrigger, MatMenuContent];\n    },\n    exports: function () {\n      return [MatMenuTrigger, MatMenuContent, MatCommonModule];\n    }\n  });\n})();\nclass MatMenuModule {}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) {\n  return new (t || MatMenuModule)();\n};\nMatMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatMenuModule\n});\nMatMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule, _MatMenuDirectivesModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule],\n      exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n      declarations: [_MatMenu, MatMenuItem],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, {\n    declarations: function () {\n      return [_MatMenu, MatMenuItem];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule];\n    },\n    exports: function () {\n      return [_MatMenu, MatMenuItem, _MatMenuDirectivesModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS, _MatMenu, _MatMenuBase, MatMenuItem, MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_PANEL, _MatMenuDirectivesModule, MatMenuModule, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa22, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵb22, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵc22 };","map":{"version":3,"names":["trigger","state","style","animate","transition","query","group","DomPortalOutlet","TemplatePortal","DOCUMENT","CommonModule","ApplicationRef","ChangeDetectorRef","ComponentFactoryResolver","Directive","Inject","Injector","TemplateRef","ViewContainerRef","InjectionToken","ChangeDetectionStrategy","Component","ElementRef","ViewEncapsulation","Optional","Input","HostListener","ContentChild","ContentChildren","EventEmitter","NgZone","Output","QueryList","ViewChild","Self","NgModule","Subject","merge","Subscription","asapScheduler","of","FocusMonitor","FocusKeyManager","isFakeMousedownFromScreenReader","mixinDisabled","mixinDisableRipple","MatCommonModule","MatRippleModule","coerceBooleanProperty","ESCAPE","LEFT_ARROW","RIGHT_ARROW","DOWN_ARROW","UP_ARROW","HOME","END","hasModifierKey","startWith","switchMap","take","delay","filter","takeUntil","Directionality","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","_c1","_MatMenu_ng_template_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","_MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_handleKeydown","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ɵɵelementEnd","ctx_r0","ɵɵproperty","_classList","_panelAnimationState","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MatMenuContent","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","attach","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","next","isAttached","ngOnDestroy","dispose","ɵfac","MatMenuContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_elementRef","document","_focusMonitor","_parentMenu","role","_hovered","_highlighted","_triggersSubmenu","monitor","addItem","focus","origin","options","focusVia","_getHostElement","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length","i","nodeType","textContent","trim","MatMenuItem_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","ɵɵattribute","toString","ɵɵclassProp","inputs","disableRipple","exportAs","features","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵelement","ɵɵadvance","dependencies","MatRipple","encapsulation","changeDetection","propDecorators","host","OnPush","None","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","close","value","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","split","forEach","className","classList","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","tabOut","subscribe","destroy","unsubscribe","itemChanges","changes","pipe","items","map","item","_item","keyCode","manager","parentMenu","direction","setFirstItemActive","setLastItemActive","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","activeItem","first","parentElement","getAttribute","resetActiveItem","setActiveItem","setElevation","depth","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","notifyOnChanges","_MatMenuBase_Factory","contentQueries","_MatMenuBase_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_MatMenuBase_Query","ɵɵviewQuery","templateRef","outputs","descendants","static","MatMenu","_MatMenu","ngZone","defaultOptions","_MatMenu_Factory","ɵɵProvidersFeature","provide","useExisting","_MatMenu_Template","ɵɵtemplate","NgClass","styles","data","animation","animations","providers","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_scrollStrategy","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","_setIsMenuOpen","_restoreFocus","_setMenuElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","MatMenuModule","MatMenuModule_Factory","ɵa22","ɵb22","ɵc22"],"sources":["C:/Users/dalci/OneDrive/Masaüstü/dotnet-angular-web-explorer/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/menu.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ApplicationRef, ChangeDetectorRef, ComponentFactoryResolver, Directive, Inject, Injector, TemplateRef, ViewContainerRef, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, Input, HostListener, ContentChild, ContentChildren, EventEmitter, NgZone, Output, QueryList, ViewChild, Self, NgModule } from '@angular/core';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW, HOME, END, hasModifierKey } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event)); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\")); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4._onAnimationStart($event)); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-menu-item\"], hostVars: 8, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, dependencies: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{ selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        /** @type {?} */\n        const manager = this._keyManager;\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => manager.setFocusOrigin(origin).setFirstItemActive()));\n        }\n        else {\n            manager.setFocusOrigin(origin).setFirstItemActive();\n        }\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef, { static: false },] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem,] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent, { static: false },] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, dependencies: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu', template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_onAnimationStart($event)\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\", changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ], providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}@media (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n        this._restoreFocus();\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 1, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [MatMenuTrigger, MatMenuContent],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [_MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [_MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS, _MatMenu, _MatMenuBase, MatMenuItem, MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY, MAT_MENU_PANEL, _MatMenuDirectivesModule, MatMenuModule, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa22, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵb22, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵc22 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
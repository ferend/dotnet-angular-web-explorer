{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked());\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n  /**\n   * Animation that slides a drawer in and out.\n   */\n  transformDrawer: trigger('transform', [\n  // We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  /**\n   * @param {?} _changeDetectorRef\n   * @param {?} _container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) {\n  return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nMatDrawerContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContent,\n  selectors: [[\"mat-drawer-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\"],\n  hostVars: 4,\n  hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatDrawerContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatDrawerContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatDrawerContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatDrawerContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        () => MatDrawerContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _focusTrapFactory\n   * @param {?} _focusMonitor\n   * @param {?} _platform\n   * @param {?} _ngZone\n   * @param {?} _doc\n   */\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._doc = _doc;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     */\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._autoFocus = true;\n    /**\n     * Emits whenever the drawer has started animating.\n     */\n    this._animationStarted = new Subject();\n    /**\n     * Emits whenever the drawer is done animating.\n     */\n    this._animationEnd = new Subject();\n    /**\n     * Current state of the sidenav animation.\n     */\n    // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n    // metadata is not inherited by child classes, instead the host binding data is defined in a way\n    // that can be inherited.\n    // tslint:disable:no-host-decorator-in-concrete\n    this._animationState = 'void';\n    /**\n     * Event emitted when the drawer open state is changed.\n     */\n    this.openedChange =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter( /* isAsync */true);\n    /**\n     * Emits when the component is destroyed.\n     */\n    this._destroyed = new Subject();\n    /**\n     * Event emitted when the drawer's position changes.\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    this._modeChanged = new Subject();\n    this._opened = false;\n    this.openedChange.subscribe(\n    /**\n    * @param {?} opened\n    * @return {?}\n    */\n    opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = /** @type {?} */this._doc.activeElement;\n        }\n        if (this._isFocusTrapEnabled && this._focusTrap) {\n          this._trapFocus();\n        }\n      } else {\n        this._restoreFocus();\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      /** @type {?} */fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      event => this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n    });\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd.pipe(distinctUntilChanged(\n    /**\n    * @param {?} x\n    * @param {?} y\n    * @return {?}\n    */\n    (x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      const {\n        fromState,\n        toState\n      } = event;\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /**\n   * The side that the drawer is attached to.\n   * @return {?}\n   */\n  get position() {\n    return this._position;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value != this._position) {\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /**\n   * Mode of the drawer; one of 'over', 'push' or 'side'.\n   * @return {?}\n   */\n  get mode() {\n    return this._mode;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  /**\n   * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n   * @return {?}\n   */\n  get disableClose() {\n    return this._disableClose;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * @return {?}\n   */\n  get autoFocus() {\n    return this._autoFocus;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set autoFocus(value) {\n    this._autoFocus = coerceBooleanProperty(value);\n  }\n  /**\n   * Event emitted when the drawer has been opened.\n   * @return {?}\n   */\n  get _openedStream() {\n    return this.openedChange.pipe(filter(\n    /**\n    * @param {?} o\n    * @return {?}\n    */\n    o => o), map(\n    /**\n    * @return {?}\n    */\n    () => {}));\n  }\n  /**\n   * Event emitted when the drawer has started opening.\n   * @return {?}\n   */\n  get openedStart() {\n    return this._animationStarted.pipe(filter(\n    /**\n    * @param {?} e\n    * @return {?}\n    */\n    e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), map(\n    /**\n    * @return {?}\n    */\n    () => {}));\n  }\n  /**\n   * Event emitted when the drawer has been closed.\n   * @return {?}\n   */\n  get _closedStream() {\n    return this.openedChange.pipe(filter(\n    /**\n    * @param {?} o\n    * @return {?}\n    */\n    o => !o), map(\n    /**\n    * @return {?}\n    */\n    () => {}));\n  }\n  /**\n   * Event emitted when the drawer has started closing.\n   * @return {?}\n   */\n  get closedStart() {\n    return this._animationStarted.pipe(filter(\n    /**\n    * @param {?} e\n    * @return {?}\n    */\n    e => e.fromState !== e.toState && e.toState === 'void'), map(\n    /**\n    * @return {?}\n    */\n    () => {}));\n  }\n  /**\n   * @return {?}\n   */\n  get _isFocusTrapEnabled() {\n    // The focus trap is only enabled when the drawer is open in any mode other than side.\n    return this.opened && this.mode !== 'side';\n  }\n  /**\n   * Traps focus inside the drawer.\n   * @private\n   * @return {?}\n   */\n  _trapFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n    this._focusTrap.focusInitialElementWhenReady().then(\n    /**\n    * @param {?} hasMovedFocus\n    * @return {?}\n    */\n    hasMovedFocus => {\n      // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n      // still works. We need to check that `focus` is a function due to Universal.\n      if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n  /**\n   * If focus is currently inside the drawer, restores it to where it was before the drawer\n   * opened.\n   * @private\n   * @return {?}\n   */\n  _restoreFocus() {\n    if (!this.autoFocus) {\n      return;\n    }\n    /** @type {?} */\n    const activeEl = this._doc && this._doc.activeElement;\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n      if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    this._openedVia = null;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._updateFocusTrapState();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   * @return {?}\n   */\n  get opened() {\n    return this._opened;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /**\n   * Open the drawer.\n   * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   * @return {?}\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /**\n   * Close the drawer.\n   * @return {?}\n   */\n  close() {\n    return this.toggle(false);\n  }\n  /**\n   * Toggle this drawer.\n   * @param {?=} isOpen Whether the drawer should be open.\n   * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   * @return {?}\n   */\n  toggle(isOpen = !this.opened, openedVia = 'program') {\n    this._opened = isOpen;\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      this._openedVia = openedVia;\n    } else {\n      this._animationState = 'void';\n      this._restoreFocus();\n    }\n    this._updateFocusTrapState();\n    return new Promise(\n    /**\n    * @param {?} resolve\n    * @return {?}\n    */\n    resolve => {\n      this.openedChange.pipe(take(1)).subscribe(\n      /**\n      * @param {?} open\n      * @return {?}\n      */\n      open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  /**\n   * @return {?}\n   */\n  get _width() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n  /**\n   * Updates the enabled state of the focus trap.\n   * @private\n   * @return {?}\n   */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n  }\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _animationStartListener(event) {\n    this._animationStarted.next(event);\n  }\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _animationDoneListener(event) {\n    this._animationEnd.next(event);\n  }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) {\n  return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8));\n};\nMatDrawer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawer,\n  selectors: [[\"mat-drawer\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n  hostVars: 12,\n  hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n        return ctx._animationStartListener($event);\n      })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n        return ctx._animationDoneListener($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    }\n  },\n  inputs: {\n    position: \"position\",\n    mode: \"mode\",\n    disableClose: \"disableClose\",\n    autoFocus: \"autoFocus\",\n    opened: \"opened\"\n  },\n  outputs: {\n    openedChange: \"openedChange\",\n    onPositionChanged: \"positionChanged\",\n    _openedStream: \"opened\",\n    openedStart: \"openedStart\",\n    _closedStream: \"closed\",\n    closedStart: \"closedStart\"\n  },\n  exportAs: [\"matDrawer\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatDrawer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusTrapFactory\n}, {\n  type: FocusMonitor\n}, {\n  type: Platform\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\nMatDrawer.propDecorators = {\n  position: [{\n    type: Input\n  }],\n  mode: [{\n    type: Input\n  }],\n  disableClose: [{\n    type: Input\n  }],\n  autoFocus: [{\n    type: Input\n  }],\n  _animationState: [{\n    type: HostBinding,\n    args: ['@transform']\n  }],\n  openedChange: [{\n    type: Output\n  }],\n  _openedStream: [{\n    type: Output,\n    args: ['opened']\n  }],\n  openedStart: [{\n    type: Output\n  }],\n  _closedStream: [{\n    type: Output,\n    args: ['closed']\n  }],\n  closedStart: [{\n    type: Output\n  }],\n  onPositionChanged: [{\n    type: Output,\n    args: ['positionChanged']\n  }],\n  opened: [{\n    type: Input\n  }],\n  _animationStartListener: [{\n    type: HostListener,\n    args: ['@transform.start', ['$event']]\n  }],\n  _animationDoneListener: [{\n    type: HostListener,\n    args: ['@transform.done', ['$event']]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc2.FocusTrapFactory\n    }, {\n      type: ɵngcc2.FocusMonitor\n    }, {\n      type: ɵngcc3.Platform\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    _animationState: [{\n      type: HostBinding,\n      args: ['@transform']\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    opened: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener: [{\n      type: HostListener,\n      args: ['@transform.start', ['$event']]\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener: [{\n      type: HostListener,\n      args: ['@transform.done', ['$event']]\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  /**\n   * @param {?} _dir\n   * @param {?} _element\n   * @param {?} _ngZone\n   * @param {?} _changeDetectorRef\n   * @param {?} viewportRuler\n   * @param {?=} defaultAutosize\n   * @param {?=} _animationMode\n   */\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     */\n    this.backdropClick = new EventEmitter();\n    /**\n     * Emits when the component is destroyed.\n     */\n    this._destroyed = new Subject();\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     */\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject();\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => this.updateContentMargins());\n    this._autosize = defaultAutosize;\n  }\n  /**\n   * The drawer child with the `start` position.\n   * @return {?}\n   */\n  get start() {\n    return this._start;\n  }\n  /**\n   * The drawer child with the `end` position.\n   * @return {?}\n   */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   * @return {?}\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   * @return {?}\n   */\n  get hasBackdrop() {\n    if (this._backdropOverride == null) {\n      return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /**\n   * Reference to the CdkScrollable instance that wraps the scrollable content.\n   * @return {?}\n   */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._drawers.changes.pipe(startWith(null)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._validateDrawers();\n      this._drawers.forEach(\n      /**\n      * @param {?} drawer\n      * @return {?}\n      */\n      drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    this._doCheckSubject.pipe(debounceTime(10),\n    // Arbitrary debounce time, less than a frame at 60fps\n    takeUntil(this._destroyed)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => this.updateContentMargins());\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Calls `open` of both start and end drawers\n   * @return {?}\n   */\n  open() {\n    this._drawers.forEach(\n    /**\n    * @param {?} drawer\n    * @return {?}\n    */\n    drawer => drawer.open());\n  }\n  /**\n   * Calls `close` of both start and end drawers\n   * @return {?}\n   */\n  close() {\n    this._drawers.forEach(\n    /**\n    * @param {?} drawer\n    * @return {?}\n    */\n    drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   * @return {?}\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    /** @type {?} */\n    let left = 0;\n    /** @type {?} */\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._width;\n      } else if (this._left.mode == 'push') {\n        /** @type {?} */\n        const width = this._left._width;\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._width;\n      } else if (this._right.mode == 'push') {\n        /** @type {?} */\n        const width = this._right._width;\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || /** @type {?} */null;\n    right = right || /** @type {?} */null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(\n      /**\n      * @return {?}\n      */\n      () => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(\n      /**\n      * @return {?}\n      */\n      () => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /**\n   * Subscribes to changes in drawer mode so we can run change detection.\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n   * @private\n   * @param {?} isAdd\n   * @return {?}\n   */\n  _setContainerClass(isAdd) {\n    /** @type {?} */\n    const classList = this._element.nativeElement.classList;\n    /** @type {?} */\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /**\n   * Validate the state of the drawer children components.\n   * @private\n   * @return {?}\n   */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(\n    /**\n    * @param {?} drawer\n    * @return {?}\n    */\n    drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /**\n   * Whether the container is being pushed to the side by one of the drawers.\n   * @private\n   * @return {?}\n   */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  /**\n   * @return {?}\n   */\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawer();\n  }\n  /**\n   * @return {?}\n   */\n  _closeModalDrawer() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(\n    /**\n    * @param {?} drawer\n    * @return {?}\n    */\n    drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)).forEach(\n    /**\n    * @param {?} drawer\n    * @return {?}\n    */\n    drawer => /** @type {?} */drawer.close());\n  }\n  /**\n   * @return {?}\n   */\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start) || this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end);\n  }\n  /**\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n  _canHaveBackdrop(drawer) {\n    return drawer.mode !== 'side' || !!this._backdropOverride;\n  }\n  /**\n   * @private\n   * @param {?} drawer\n   * @return {?}\n   */\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) {\n  return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatDrawerContainer,\n  selectors: [[\"mat-drawer-container\"]],\n  contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\"],\n  hostVars: 2,\n  hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  inputs: {\n    autosize: \"autosize\",\n    hasBackdrop: \"hasBackdrop\"\n  },\n  outputs: {\n    backdropClick: \"backdropClick\"\n  },\n  exportAs: [\"matDrawerContainer\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n  template: function MatDrawerContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, MatDrawerContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [{\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: ViewportRuler\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatDrawerContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatDrawer]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatDrawerContent, {\n      static: false\n    }]\n  }],\n  _userContent: [{\n    type: ViewChild,\n    args: [MatDrawerContent, {\n      static: false\n    }]\n  }],\n  autosize: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  backdropClick: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\",\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.ViewportRuler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backdropClick: [{\n      type: Output\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatDrawer]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent, {\n        static: false\n      }]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n  /**\n   * @param {?} changeDetectorRef\n   * @param {?} container\n   * @param {?} elementRef\n   * @param {?} scrollDispatcher\n   * @param {?} ngZone\n   */\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) {\n  return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(\n  /**\n  * @return {?}\n  */\n  () => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\nMatSidenavContent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContent,\n  selectors: [[\"mat-sidenav-content\"]],\n  hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n  hostVars: 4,\n  hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSidenavContent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [{\n  type: ChangeDetectorRef\n}, {\n  type: MatSidenavContainer,\n  decorators: [{\n    type: Inject,\n    args: [forwardRef(\n    /**\n    * @return {?}\n    */\n    () => MatSidenavContainer)]\n  }]\n}, {\n  type: ElementRef\n}, {\n  type: ScrollDispatcher\n}, {\n  type: NgZone\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSidenavContainer,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(\n        /**\n         * @return {?}\n         */\n        () => MatSidenavContainer)]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.ScrollDispatcher\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /**\n   * Whether the sidenav is fixed in the viewport.\n   * @return {?}\n   */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   * @return {?}\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   * @return {?}\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n}\nMatSidenav.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenav_BaseFactory;\n  return function MatSidenav_Factory(t) {\n    return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n  };\n}();\nMatSidenav.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenav,\n  selectors: [[\"mat-sidenav\"]],\n  hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n  hostVars: 17,\n  hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"align\", null);\n      ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    }\n  },\n  inputs: {\n    fixedInViewport: \"fixedInViewport\",\n    fixedTopGap: \"fixedTopGap\",\n    fixedBottomGap: \"fixedBottomGap\"\n  },\n  exportAs: [\"matSidenav\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"mat-drawer-inner-container\"]],\n  template: function MatSidenav_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2,\n  data: {\n    animation: [matDrawerAnimations.transformDrawer]\n  },\n  changeDetection: 0\n});\nMatSidenav.propDecorators = {\n  fixedInViewport: [{\n    type: Input\n  }],\n  fixedTopGap: [{\n    type: Input\n  }],\n  fixedBottomGap: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {}\nMatSidenavContainer.ɵfac = /*@__PURE__*/function () {\n  let ɵMatSidenavContainer_BaseFactory;\n  return function MatSidenavContainer_Factory(t) {\n    return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n  };\n}();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSidenavContainer,\n  selectors: [[\"mat-sidenav-container\"]],\n  contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n  hostVars: 2,\n  hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    }\n  },\n  exportAs: [\"matSidenavContainer\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c4,\n  decls: 4,\n  vars: 2,\n  consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]],\n  template: function MatSidenavContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c3);\n      ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    }\n  },\n  dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent],\n  styles: [_c5],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatSidenavContainer.propDecorators = {\n  _drawers: [{\n    type: ContentChildren,\n    args: [MatSidenav]\n  }],\n  _content: [{\n    type: ContentChild,\n    args: [MatSidenavContent, {\n      static: false\n    }]\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], null, {\n    _drawers: [{\n      type: ContentChildren,\n      args: [MatSidenav]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) {\n  return new (t || MatSidenavModule)();\n};\nMatSidenavModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSidenavModule\n});\nMatSidenavModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule, MatCommonModule, ScrollingModule, PlatformModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, ScrollingModule, PlatformModule],\n      exports: [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      declarations: [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, {\n    declarations: function () {\n      return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, ScrollingModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };","map":{"version":3,"names":["animate","state","style","transition","trigger","FocusMonitor","FocusTrapFactory","Directionality","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","Platform","PlatformModule","CdkScrollable","ScrollDispatcher","ViewportRuler","ScrollingModule","DOCUMENT","CommonModule","ChangeDetectionStrategy","ChangeDetectorRef","Component","ContentChild","ContentChildren","ElementRef","EventEmitter","forwardRef","Inject","InjectionToken","Input","NgZone","Optional","Output","ViewChild","ViewEncapsulation","HostListener","HostBinding","NgModule","fromEvent","merge","Subject","debounceTime","filter","map","startWith","take","takeUntil","distinctUntilChanged","ANIMATION_MODULE_TYPE","MatCommonModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","MatDrawerContainer_div_0_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_div_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ctx_r0","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","ɵɵprojection","_c1","_c2","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","_c3","_c4","_c5","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MatDrawerContent","constructor","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","MatDrawerContainer","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","selector","host","OnPush","None","MatDrawer","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_autoFocus","_animationStarted","_animationEnd","_animationState","openedChange","_destroyed","onPositionChanged","_modeChanged","_opened","opened","activeElement","_isFocusTrapEnabled","_focusTrap","_trapFocus","_restoreFocus","runOutsideAngular","nativeElement","pipe","event","keyCode","disableClose","run","close","stopPropagation","preventDefault","x","y","fromState","toState","indexOf","emit","value","mode","_updateFocusTrapState","next","autoFocus","_openedStream","o","openedStart","e","_closedStream","closedStart","focusInitialElementWhenReady","then","hasMovedFocus","focus","activeEl","contains","HTMLElement","focusVia","_openedVia","blur","create","ngAfterContentChecked","isBrowser","ngOnDestroy","destroy","complete","toggle","open","openedVia","isOpen","Promise","resolve","_width","offsetWidth","enabled","_animationStartListener","_animationDoneListener","MatDrawer_Factory","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","inputs","outputs","exportAs","consts","MatDrawer_Template","data","animation","undefined","propDecorators","animations","_dir","_element","viewportRuler","defaultAutosize","_animationMode","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","hasBackdrop","_backdropOverride","scrollable","_userContent","_content","_drawers","changes","forEach","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","width","_right","ngDoCheck","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","className","remove","_closeModalDrawer","_canHaveBackdrop","MatDrawerContainer_Factory","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatDrawerContainer_Query","ɵɵviewQuery","MatDrawerContainer_HostBindings","MatDrawerContainer_Template","ɵɵtemplate","ɵɵproperty","ɵɵadvance","dependencies","NgIf","styles","String","static","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/dalci/OneDrive/Masaüstü/dotnet-angular-web-explorer/ClientApp/node_modules/@angular/material/__ivy_ngcc__/esm2015/sidenav.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FocusMonitor, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, InjectionToken, Input, NgZone, Optional, Output, ViewChild, ViewEncapsulation, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { fromEvent, merge, Subject } from 'rxjs';\nimport { debounceTime, filter, map, startWith, take, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r2._onBackdropClicked()); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._autoFocus = true;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this._opened = false;\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                if (this._isFocusTrapEnabled && this._focusTrap) {\n                    this._trapFocus();\n                }\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * @return {?}\n     */\n    get autoFocus() { return this._autoFocus; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * @return {?}\n     */\n    get _isFocusTrapEnabled() {\n        // The focus trap is only enabled when the drawer is open in any mode other than side.\n        return this.opened && this.mode !== 'side';\n    }\n    /**\n     * Traps focus inside the drawer.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatDrawer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    opened: [{ type: Input }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatDrawer,] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent, { static: false },] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent, { static: false },] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\"><ng-content></ng-content></mat-drawer-content>\", host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _drawers: [{\n            type: ContentChildren,\n            args: [MatDrawer]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent, { static: false }]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent, { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenav_BaseFactory; return function MatSidenav_Factory(t) { return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav); }; }();\nMatSidenav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\"><ng-content></ng-content></div>\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = /*@__PURE__*/ function () { let ɵMatSidenavContainer_BaseFactory; return function MatSidenavContainer_Factory(t) { return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer); }; }();\nMatSidenavContainer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._drawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, dependencies: [ɵngcc5.NgIf, ɵngcc1.CdkScrollable, MatSidenavContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _drawers: [{ type: ContentChildren, args: [MatSidenav,] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent, { static: false },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\", host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n    }], null, { _drawers: [{\n            type: ContentChildren,\n            args: [MatSidenav]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent, { static: false }]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); };\nMatSidenavModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ScrollingModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ScrollingModule,\n        PlatformModule]; }, exports: function () { return [MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, matDrawerAnimations };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
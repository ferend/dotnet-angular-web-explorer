{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input, Output, EventEmitter, Optional, ChangeDetectorRef, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n  constructor() {\n    /**\n     * Emits when the state of the accordion changes\n     */\n    this._stateChanges = new Subject();\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     */\n    this._openCloseAllActions = new Subject();\n    /**\n     * A readonly id value to use for unique selection coordination.\n     */\n    this.id = `cdk-accordion-${nextId++}`;\n    this._multi = false;\n  }\n  /**\n   * Whether the accordion should allow multiple expanded accordion items simultaneously.\n   * @return {?}\n   */\n  get multi() {\n    return this._multi;\n  }\n  /**\n   * @param {?} multi\n   * @return {?}\n   */\n  set multi(multi) {\n    this._multi = coerceBooleanProperty(multi);\n  }\n  /**\n   * Opens all enabled accordion items in an accordion where multi is enabled.\n   * @return {?}\n   */\n  openAll() {\n    this._openCloseAll(true);\n  }\n  /**\n   * Closes all enabled accordion items in an accordion where multi is enabled.\n   * @return {?}\n   */\n  closeAll() {\n    this._openCloseAll(false);\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n  ngOnChanges(changes) {\n    this._stateChanges.next(changes);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * @private\n   * @param {?} expanded\n   * @return {?}\n   */\n  _openCloseAll(expanded) {\n    if (this.multi) {\n      this._openCloseAllActions.next(expanded);\n    }\n  }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) {\n  return new (t || CdkAccordion)();\n};\nCdkAccordion.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordion,\n  selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n  inputs: {\n    multi: \"multi\"\n  },\n  exportAs: [\"cdkAccordion\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nCdkAccordion.propDecorators = {\n  multi: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion, [cdkAccordion]',\n      exportAs: 'cdkAccordion'\n    }]\n  }], function () {\n    return [];\n  }, {\n    multi: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n  /**\n   * @param {?} accordion\n   * @param {?} _changeDetectorRef\n   * @param {?} _expansionDispatcher\n   */\n  constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n    this.accordion = accordion;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._expansionDispatcher = _expansionDispatcher;\n    /**\n     * Subscription to openAll/closeAll events.\n     */\n    this._openCloseAllSubscription = Subscription.EMPTY;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     */\n    this.opened = new EventEmitter();\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     */\n    this.destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     */\n    this.expandedChange = new EventEmitter();\n    /**\n     * The unique AccordionItem id.\n     */\n    this.id = `cdk-accordion-child-${nextId$1++}`;\n    this._expanded = false;\n    this._disabled = false;\n    /**\n     * Unregister function for _expansionDispatcher.\n     */\n    this._removeUniqueSelectionListener =\n    /**\n    * @return {?}\n    */\n    () => {};\n    this._removeUniqueSelectionListener = _expansionDispatcher.listen(\n    /**\n    * @param {?} id\n    * @param {?} accordionId\n    * @return {?}\n    */\n    (id, accordionId) => {\n      if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n        this.expanded = false;\n      }\n    });\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n  /**\n   * Whether the AccordionItem is expanded.\n   * @return {?}\n   */\n  get expanded() {\n    return this._expanded;\n  }\n  /**\n   * @param {?} expanded\n   * @return {?}\n   */\n  set expanded(expanded) {\n    expanded = coerceBooleanProperty(expanded);\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         * @type {?}\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Whether the AccordionItem is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} disabled\n   * @return {?}\n   */\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  /**\n   * Emits an event for the accordion item being destroyed.\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n  /**\n   * Toggles the expanded state of the accordion item.\n   * @return {?}\n   */\n  toggle() {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n  /**\n   * Sets the expanded state of the accordion item to false.\n   * @return {?}\n   */\n  close() {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n  /**\n   * Sets the expanded state of the accordion item to true.\n   * @return {?}\n   */\n  open() {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _subscribeToOpenCloseAllActions() {\n    return this.accordion._openCloseAllActions.subscribe(\n    /**\n    * @param {?} expanded\n    * @return {?}\n    */\n    expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) {\n  return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher));\n};\nCdkAccordionItem.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: CdkAccordionItem,\n  selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n  inputs: {\n    expanded: \"expanded\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    closed: \"closed\",\n    opened: \"opened\",\n    destroyed: \"destroyed\",\n    expandedChange: \"expandedChange\"\n  },\n  exportAs: [\"cdkAccordionItem\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([\n  // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n  // to the same accordion.\n  {\n    provide: CdkAccordion,\n    useValue: ɵ0\n  }])]\n});\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [{\n  type: CdkAccordion,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }]\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: UniqueSelectionDispatcher\n}];\nCdkAccordionItem.propDecorators = {\n  closed: [{\n    type: Output\n  }],\n  opened: [{\n    type: Output\n  }],\n  destroyed: [{\n    type: Output\n  }],\n  expandedChange: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: 'cdk-accordion-item, [cdkAccordionItem]',\n      exportAs: 'cdkAccordionItem',\n      providers: [\n      // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n      // to the same accordion.\n      {\n        provide: CdkAccordion,\n        useValue: ɵ0\n      }]\n    }]\n  }], function () {\n    return [{\n      type: CdkAccordion,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc1.UniqueSelectionDispatcher\n    }];\n  }, {\n    closed: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    expandedChange: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) {\n  return new (t || CdkAccordionModule)();\n};\nCdkAccordionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CdkAccordionModule\n});\nCdkAccordionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CdkAccordion, CdkAccordionItem],\n      declarations: [CdkAccordion, CdkAccordionItem]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, {\n    declarations: [CdkAccordion, CdkAccordionItem],\n    exports: [CdkAccordion, CdkAccordionItem]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CdkAccordionItem, CdkAccordion, CdkAccordionModule };","map":{"version":3,"names":["coerceBooleanProperty","Directive","Input","Output","EventEmitter","Optional","ChangeDetectorRef","SkipSelf","NgModule","Subject","Subscription","UniqueSelectionDispatcher","ɵngcc0","ɵngcc1","nextId","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","_openCloseAll","closeAll","ngOnChanges","changes","next","ngOnDestroy","complete","expanded","ɵfac","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","CdkAccordionItem_Factory","ɵɵdirectiveInject","outputs","ɵɵProvidersFeature","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/Users/dalci/OneDrive/Masaüstü/dotnet-angular-web-explorer/ClientApp/node_modules/@angular/cdk/__ivy_ngcc__/esm2015/accordion.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input, Output, EventEmitter, Optional, ChangeDetectorRef, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CdkAccordionItem, CdkAccordion, CdkAccordionModule };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,eAAe;AACvH,SAASC,OAAO,EAAEC,YAAY,QAAQ,MAAM;AAC5C,SAASC,yBAAyB,QAAQ,0BAA0B;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAClD,IAAIC,MAAM,GAAG,CAAC;AACd;AACA;AACA;AACA,MAAMC,YAAY,CAAC;EACfC,WAAW,GAAG;IACV;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,IAAIR,OAAO,EAAE;IAClC;AACR;AACA;IACQ,IAAI,CAACS,oBAAoB,GAAG,IAAIT,OAAO,EAAE;IACzC;AACR;AACA;IACQ,IAAI,CAACU,EAAE,GAAI,iBAAgBL,MAAM,EAAG,EAAC;IACrC,IAAI,CAACM,MAAM,GAAG,KAAK;EACvB;EACA;AACJ;AACA;AACA;EACI,IAAIC,KAAK,GAAG;IAAE,OAAO,IAAI,CAACD,MAAM;EAAE;EAClC;AACJ;AACA;AACA;EACI,IAAIC,KAAK,CAACA,KAAK,EAAE;IAAE,IAAI,CAACD,MAAM,GAAGpB,qBAAqB,CAACqB,KAAK,CAAC;EAAE;EAC/D;AACJ;AACA;AACA;EACIC,OAAO,GAAG;IACN,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC;EAC5B;EACA;AACJ;AACA;AACA;EACIC,QAAQ,GAAG;IACP,IAAI,CAACD,aAAa,CAAC,KAAK,CAAC;EAC7B;EACA;AACJ;AACA;AACA;EACIE,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACT,aAAa,CAACU,IAAI,CAACD,OAAO,CAAC;EACpC;EACA;AACJ;AACA;EACIE,WAAW,GAAG;IACV,IAAI,CAACX,aAAa,CAACY,QAAQ,EAAE;EACjC;EACA;AACJ;AACA;AACA;AACA;EACIN,aAAa,CAACO,QAAQ,EAAE;IACpB,IAAI,IAAI,CAACT,KAAK,EAAE;MACZ,IAAI,CAACH,oBAAoB,CAACS,IAAI,CAACG,QAAQ,CAAC;IAC5C;EACJ;AACJ;AACAf,YAAY,CAACgB,IAAI,GAAG,SAASC,oBAAoB,CAACC,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIlB,YAAY,GAAG;AAAE,CAAC;AAC1FA,YAAY,CAACmB,IAAI,GAAG,aAActB,MAAM,CAACuB,iBAAiB,CAAC;EAAEC,IAAI,EAAErB,YAAY;EAAEsB,SAAS,EAAE,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAEjB,KAAK,EAAE;EAAQ,CAAC;EAAEkB,QAAQ,EAAE,CAAC,cAAc,CAAC;EAAEC,QAAQ,EAAE,CAAC5B,MAAM,CAAC6B,oBAAoB;AAAE,CAAC,CAAC;AAC7O1B,YAAY,CAAC2B,cAAc,GAAG;EAC1BrB,KAAK,EAAE,CAAC;IAAEe,IAAI,EAAElC;EAAM,CAAC;AAC3B,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOyC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK/B,MAAM,CAACgC,iBAAiB,CAAC7B,YAAY,EAAE,CAAC;IAClGqB,IAAI,EAAEnC,SAAS;IACf4C,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,+BAA+B;MACzCP,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC,EAAE;IAAElB,KAAK,EAAE,CAAC;MAClCe,IAAI,EAAElC;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI6C,QAAQ,GAAG,CAAC;AAChB,MAAMC,EAAE,GAAGC,SAAS;AACpB;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;EACnB;AACJ;AACA;AACA;AACA;EACIlC,WAAW,CAACmC,SAAS,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAE;IAC7D,IAAI,CAACF,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD;AACR;AACA;IACQ,IAAI,CAACC,yBAAyB,GAAG5C,YAAY,CAAC6C,KAAK;IACnD;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG,IAAIpD,YAAY,EAAE;IAChC;AACR;AACA;IACQ,IAAI,CAACqD,MAAM,GAAG,IAAIrD,YAAY,EAAE;IAChC;AACR;AACA;IACQ,IAAI,CAACsD,SAAS,GAAG,IAAItD,YAAY,EAAE;IACnC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACuD,cAAc,GAAG,IAAIvD,YAAY,EAAE;IACxC;AACR;AACA;IACQ,IAAI,CAACe,EAAE,GAAI,uBAAsB4B,QAAQ,EAAG,EAAC;IAC7C,IAAI,CAACa,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB;AACR;AACA;IACQ,IAAI,CAACC,8BAA8B;IAAI;AAC/C;AACA;IACQ,MAAM,CAAE,CAAE;IACV,IAAI,CAACA,8BAA8B,GAC/BT,oBAAoB,CAACU,MAAM;IAAE;AACzC;AACA;AACA;AACA;IACY,CAAC5C,EAAE,EAAE6C,WAAW,KAAK;MACjB,IAAI,IAAI,CAACb,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAAC9B,KAAK,IACvC,IAAI,CAAC8B,SAAS,CAAChC,EAAE,KAAK6C,WAAW,IAAI,IAAI,CAAC7C,EAAE,KAAKA,EAAE,EAAE;QACrD,IAAI,CAACW,QAAQ,GAAG,KAAK;MACzB;IACJ,CAAC,CAAE;IACP;IACA,IAAI,IAAI,CAACqB,SAAS,EAAE;MAChB,IAAI,CAACG,yBAAyB,GAAG,IAAI,CAACW,+BAA+B,EAAE;IAC3E;EACJ;EACA;AACJ;AACA;AACA;EACI,IAAInC,QAAQ,GAAG;IAAE,OAAO,IAAI,CAAC8B,SAAS;EAAE;EACxC;AACJ;AACA;AACA;EACI,IAAI9B,QAAQ,CAACA,QAAQ,EAAE;IACnBA,QAAQ,GAAG9B,qBAAqB,CAAC8B,QAAQ,CAAC;IAC1C;IACA,IAAI,IAAI,CAAC8B,SAAS,KAAK9B,QAAQ,EAAE;MAC7B,IAAI,CAAC8B,SAAS,GAAG9B,QAAQ;MACzB,IAAI,CAAC6B,cAAc,CAACO,IAAI,CAACpC,QAAQ,CAAC;MAClC,IAAIA,QAAQ,EAAE;QACV,IAAI,CAAC2B,MAAM,CAACS,IAAI,EAAE;QAClB;AAChB;AACA;AACA;AACA;QACgB,MAAMF,WAAW,GAAG,IAAI,CAACb,SAAS,GAAG,IAAI,CAACA,SAAS,CAAChC,EAAE,GAAG,IAAI,CAACA,EAAE;QAChE,IAAI,CAACkC,oBAAoB,CAACc,MAAM,CAAC,IAAI,CAAChD,EAAE,EAAE6C,WAAW,CAAC;MAC1D,CAAC,MACI;QACD,IAAI,CAACR,MAAM,CAACU,IAAI,EAAE;MACtB;MACA;MACA;MACA,IAAI,CAACd,kBAAkB,CAACgB,YAAY,EAAE;IAC1C;EACJ;EACA;AACJ;AACA;AACA;EACI,IAAIC,QAAQ,GAAG;IAAE,OAAO,IAAI,CAACR,SAAS;EAAE;EACxC;AACJ;AACA;AACA;EACI,IAAIQ,QAAQ,CAACA,QAAQ,EAAE;IAAE,IAAI,CAACR,SAAS,GAAG7D,qBAAqB,CAACqE,QAAQ,CAAC;EAAE;EAC3E;AACJ;AACA;AACA;EACIzC,WAAW,GAAG;IACV,IAAI,CAAC6B,MAAM,CAAC5B,QAAQ,EAAE;IACtB,IAAI,CAAC2B,MAAM,CAAC3B,QAAQ,EAAE;IACtB,IAAI,CAAC6B,SAAS,CAACQ,IAAI,EAAE;IACrB,IAAI,CAACR,SAAS,CAAC7B,QAAQ,EAAE;IACzB,IAAI,CAACiC,8BAA8B,EAAE;IACrC,IAAI,CAACR,yBAAyB,CAACgB,WAAW,EAAE;EAChD;EACA;AACJ;AACA;AACA;EACIC,MAAM,GAAG;IACL,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;MAChB,IAAI,CAACvC,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAClC;EACJ;EACA;AACJ;AACA;AACA;EACI0C,KAAK,GAAG;IACJ,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;MAChB,IAAI,CAACvC,QAAQ,GAAG,KAAK;IACzB;EACJ;EACA;AACJ;AACA;AACA;EACI2C,IAAI,GAAG;IACH,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAChB,IAAI,CAACvC,QAAQ,GAAG,IAAI;IACxB;EACJ;EACA;AACJ;AACA;AACA;EACImC,+BAA+B,GAAG;IAC9B,OAAO,IAAI,CAACd,SAAS,CAACjC,oBAAoB,CAACwD,SAAS;IAAE;AAC9D;AACA;AACA;IACQ5C,QAAQ,IAAI;MACR;MACA,IAAI,CAAC,IAAI,CAACuC,QAAQ,EAAE;QAChB,IAAI,CAACvC,QAAQ,GAAGA,QAAQ;MAC5B;IACJ,CAAC,CAAE;EACP;AACJ;AACAoB,gBAAgB,CAACnB,IAAI,GAAG,SAAS4C,wBAAwB,CAAC1C,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAIiB,gBAAgB,EAAEtC,MAAM,CAACgE,iBAAiB,CAAC7D,YAAY,EAAE,EAAE,CAAC,EAAEH,MAAM,CAACgE,iBAAiB,CAAChE,MAAM,CAACN,iBAAiB,CAAC,EAAEM,MAAM,CAACgE,iBAAiB,CAAC/D,MAAM,CAACF,yBAAyB,CAAC,CAAC;AAAE,CAAC;AAChQuC,gBAAgB,CAAChB,IAAI,GAAG,aAActB,MAAM,CAACuB,iBAAiB,CAAC;EAAEC,IAAI,EAAEc,gBAAgB;EAAEb,SAAS,EAAE,CAAC,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC;EAAEC,MAAM,EAAE;IAAER,QAAQ,EAAE,UAAU;IAAEuC,QAAQ,EAAE;EAAW,CAAC;EAAEQ,OAAO,EAAE;IAAErB,MAAM,EAAE,QAAQ;IAAEC,MAAM,EAAE,QAAQ;IAAEC,SAAS,EAAE,WAAW;IAAEC,cAAc,EAAE;EAAiB,CAAC;EAAEpB,QAAQ,EAAE,CAAC,kBAAkB,CAAC;EAAEC,QAAQ,EAAE,CAAC5B,MAAM,CAACkE,kBAAkB,CAAC;EACxX;EACA;EACA;IAAEC,OAAO,EAAEhE,YAAY;IAAEiE,QAAQ,EAAEhC;EAAG,CAAC,CAC1C,CAAC;AAAE,CAAC,CAAC;AACd;AACAE,gBAAgB,CAAC+B,cAAc,GAAG,MAAM,CACpC;EAAE7C,IAAI,EAAErB,YAAY;EAAEmE,UAAU,EAAE,CAAC;IAAE9C,IAAI,EAAE/B;EAAS,CAAC,EAAE;IAAE+B,IAAI,EAAE7B;EAAS,CAAC;AAAE,CAAC,EAC5E;EAAE6B,IAAI,EAAE9B;AAAkB,CAAC,EAC3B;EAAE8B,IAAI,EAAEzB;AAA0B,CAAC,CACtC;AACDuC,gBAAgB,CAACR,cAAc,GAAG;EAC9Bc,MAAM,EAAE,CAAC;IAAEpB,IAAI,EAAEjC;EAAO,CAAC,CAAC;EAC1BsD,MAAM,EAAE,CAAC;IAAErB,IAAI,EAAEjC;EAAO,CAAC,CAAC;EAC1BuD,SAAS,EAAE,CAAC;IAAEtB,IAAI,EAAEjC;EAAO,CAAC,CAAC;EAC7BwD,cAAc,EAAE,CAAC;IAAEvB,IAAI,EAAEjC;EAAO,CAAC,CAAC;EAClC2B,QAAQ,EAAE,CAAC;IAAEM,IAAI,EAAElC;EAAM,CAAC,CAAC;EAC3BmE,QAAQ,EAAE,CAAC;IAAEjC,IAAI,EAAElC;EAAM,CAAC;AAC9B,CAAC;AACD,CAAC,YAAY;EAAE,CAAC,OAAOyC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK/B,MAAM,CAACgC,iBAAiB,CAACM,gBAAgB,EAAE,CAAC;IACtGd,IAAI,EAAEnC,SAAS;IACf4C,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE,wCAAwC;MAClDP,QAAQ,EAAE,kBAAkB;MAC5B4C,SAAS,EAAE;MACP;MACA;MACA;QAAEJ,OAAO,EAAEhE,YAAY;QAAEiE,QAAQ,EAAEhC;MAAG,CAAC;IAE/C,CAAC;EACT,CAAC,CAAC,EAAE,YAAY;IAAE,OAAO,CAAC;MAAEZ,IAAI,EAAErB,YAAY;MAAEmE,UAAU,EAAE,CAAC;QACjD9C,IAAI,EAAE/B;MACV,CAAC,EAAE;QACC+B,IAAI,EAAE7B;MACV,CAAC;IAAE,CAAC,EAAE;MAAE6B,IAAI,EAAExB,MAAM,CAACN;IAAkB,CAAC,EAAE;MAAE8B,IAAI,EAAEvB,MAAM,CAACF;IAA0B,CAAC,CAAC;EAAE,CAAC,EAAE;IAAE6C,MAAM,EAAE,CAAC;MACrGpB,IAAI,EAAEjC;IACV,CAAC,CAAC;IAAEsD,MAAM,EAAE,CAAC;MACTrB,IAAI,EAAEjC;IACV,CAAC,CAAC;IAAEuD,SAAS,EAAE,CAAC;MACZtB,IAAI,EAAEjC;IACV,CAAC,CAAC;IAAEwD,cAAc,EAAE,CAAC;MACjBvB,IAAI,EAAEjC;IACV,CAAC,CAAC;IAAE2B,QAAQ,EAAE,CAAC;MACXM,IAAI,EAAElC;IACV,CAAC,CAAC;IAAEmE,QAAQ,EAAE,CAAC;MACXjC,IAAI,EAAElC;IACV,CAAC;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEnB;AACA;AACA;AACA;AACA,MAAMkF,kBAAkB,CAAC;AAEzBA,kBAAkB,CAACrD,IAAI,GAAG,SAASsD,0BAA0B,CAACpD,CAAC,EAAE;EAAE,OAAO,KAAKA,CAAC,IAAImD,kBAAkB,GAAG;AAAE,CAAC;AAC5GA,kBAAkB,CAACE,IAAI,GAAG,aAAc1E,MAAM,CAAC2E,gBAAgB,CAAC;EAAEnD,IAAI,EAAEgD;AAAmB,CAAC,CAAC;AAC7FA,kBAAkB,CAACI,IAAI,GAAG,aAAc5E,MAAM,CAAC6E,gBAAgB,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,YAAY;EAAE,CAAC,OAAO9C,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK/B,MAAM,CAACgC,iBAAiB,CAACwC,kBAAkB,EAAE,CAAC;IACxGhD,IAAI,EAAE5B,QAAQ;IACdqC,IAAI,EAAE,CAAC;MACC6C,OAAO,EAAE,CAAC3E,YAAY,EAAEmC,gBAAgB,CAAC;MACzCyC,YAAY,EAAE,CAAC5E,YAAY,EAAEmC,gBAAgB;IACjD,CAAC;EACT,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;AAAE,CAAC,GAAG;AACzB,CAAC,YAAY;EAAE,CAAC,OAAO0C,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAKhF,MAAM,CAACiF,kBAAkB,CAACT,kBAAkB,EAAE;IAAEO,YAAY,EAAE,CAAC5E,YAAY,EAAEmC,gBAAgB,CAAC;IAAEwC,OAAO,EAAE,CAAC3E,YAAY,EAAEmC,gBAAgB;EAAE,CAAC,CAAC;AAAE,CAAC,GAAG;;AAEpN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAASA,gBAAgB,EAAEnC,YAAY,EAAEqE,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}